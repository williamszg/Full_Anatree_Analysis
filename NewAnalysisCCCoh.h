//////////////////////////////////////////////////////////
// This class has been automatically generated on
// Mon Feb  4 14:38:03 2019 by ROOT version 6.12/06
// from TTree anatree/analysis tree
// found on file: ana_hist_ALL.root
//////////////////////////////////////////////////////////

#ifndef NewAnalysis_h
#define NewAnalysis_h

#include <TROOT.h>
#include <TChain.h>
#include <TFile.h>

// Header file for the classes stored in the TTree if any.
#include "vector"
#include "vector"
#include "vector"
#include "vector"

class NewAnalysis {
public :
   TTree          *fChain;   //!pointer to the analyzed TTree or TChain
   Int_t           fCurrent; //!current Tree number in a TChain

// Fixed size dimensions of array or collections stored in the TTree if any.

   // Declaration of leaf types
   Int_t           run;
   Int_t           subrun;
   Int_t           event;
   Double_t        evttime;
   Double_t        beamtime;
   Double_t        pot;
   Char_t          isdata;
   Double_t        taulife;
   UInt_t          triggernumber;
   Double_t        triggertime;
   Double_t        beamgatetime;
   UInt_t          triggerbits;
   Double_t        potbnb;
   Double_t        potnumitgt;
   Double_t        potnumi101;
   vector<string>  *evtwgt_funcname;
   vector<vector<double> > *evtwgt_weight;
   vector<int>     *evtwgt_nweight;
   Int_t           evtwgt_nfunc;
   Float_t         opfilter_pebeam;
   Float_t         opfilter_peveto;
   Float_t         opfilter_pmtmaxfrac;
   vector<string>  *swtrigger_name;
   vector<bool>    *swtrigger_triggered;
   Int_t           no_hits;
   Int_t           no_hits_stored;
   Short_t         hit_plane[36676];   //[no_hits_stored]
   Short_t         hit_wire[36676];   //[no_hits_stored]
   Short_t         hit_channel[36676];   //[no_hits_stored]
   Float_t         hit_peakT[36676];   //[no_hits_stored]
   Float_t         hit_charge[36676];   //[no_hits_stored]
   Float_t         hit_ph[36676];   //[no_hits_stored]
   Float_t         hit_startT[36676];   //[no_hits_stored]
   Float_t         hit_endT[36676];   //[no_hits_stored]
   Float_t         hit_rms[36676];   //[no_hits_stored]
   Float_t         hit_trueX[36676];   //[no_hits_stored]
   Float_t         hit_goodnessOfFit[36676];   //[no_hits_stored]
   Short_t         hit_multiplicity[36676];   //[no_hits_stored]
   Short_t         hit_trkid[36676];   //[no_hits_stored]
   Short_t         hit_trkKey[36676];   //[no_hits_stored]
   Short_t         hit_clusterid[36676];   //[no_hits_stored]
   Short_t         hit_clusterKey[36676];   //[no_hits_stored]
   Float_t         hit_nelec[36676];   //[no_hits_stored]
   Float_t         hit_energy[36676];   //[no_hits_stored]
   Short_t         nclusters;
   Short_t         clusterId[1];   //[nclusters]
   Short_t         clusterView[1];   //[nclusters]
   Float_t         cluster_StartCharge[1];   //[nclusters]
   Float_t         cluster_StartAngle[1];   //[nclusters]
   Float_t         cluster_EndCharge[1];   //[nclusters]
   Float_t         cluster_EndAngle[1];   //[nclusters]
   Float_t         cluster_Integral[1];   //[nclusters]
   Float_t         cluster_IntegralAverage[1];   //[nclusters]
   Float_t         cluster_SummedADC[1];   //[nclusters]
   Float_t         cluster_SummedADCaverage[1];   //[nclusters]
   Float_t         cluster_MultipleHitDensity[1];   //[nclusters]
   Float_t         cluster_Width[1];   //[nclusters]
   Short_t         cluster_NHits[1];   //[nclusters]
   Short_t         cluster_StartWire[1];   //[nclusters]
   Short_t         cluster_StartTick[1];   //[nclusters]
   Short_t         cluster_EndWire[1];   //[nclusters]
   Short_t         cluster_EndTick[1];   //[nclusters]
   Short_t         cluncosmictags_tagger[1];   //[nclusters]
   Float_t         clucosmicscore_tagger[1];   //[nclusters]
   Short_t         clucosmictype_tagger[1];   //[nclusters]
   Char_t          kNFlashAlgos;
   Char_t          kNTracker;
   Char_t          kNVertexAlgos;
   Char_t          kNNeutrinoVertexAlgos;
   Char_t          kNShowerAlgos;
   Int_t           mcevts_truth;
   Int_t           nuPDG_truth[1];   //[mcevts_truth]
   Int_t           ccnc_truth[1];   //[mcevts_truth]
   Int_t           mode_truth[1];   //[mcevts_truth]
   Float_t         enu_truth[1];   //[mcevts_truth]
   Float_t         Q2_truth[1];   //[mcevts_truth]
   Float_t         W_truth[1];   //[mcevts_truth]
   Float_t         X_truth[1];   //[mcevts_truth]
   Float_t         Y_truth[1];   //[mcevts_truth]
   Int_t           hitnuc_truth[1];   //[mcevts_truth]
   Float_t         nuvtxx_truth[1];   //[mcevts_truth]
   Float_t         nuvtxy_truth[1];   //[mcevts_truth]
   Float_t         nuvtxz_truth[1];   //[mcevts_truth]
   Float_t         sp_charge_corrected_nuvtxx_truth[1];   //[mcevts_truth]
   Float_t         sp_charge_corrected_nuvtxy_truth[1];   //[mcevts_truth]
   Float_t         sp_charge_corrected_nuvtxz_truth[1];   //[mcevts_truth]
   Float_t         nu_dcosx_truth[1];   //[mcevts_truth]
   Float_t         nu_dcosy_truth[1];   //[mcevts_truth]
   Float_t         nu_dcosz_truth[1];   //[mcevts_truth]
   Float_t         lep_mom_truth[1];   //[mcevts_truth]
   Float_t         lep_dcosx_truth[1];   //[mcevts_truth]
   Float_t         lep_dcosy_truth[1];   //[mcevts_truth]
   Float_t         lep_dcosz_truth[1];   //[mcevts_truth]
   Float_t         vx_flux[1];   //[mcevts_truth]
   Float_t         vy_flux[1];   //[mcevts_truth]
   Float_t         vz_flux[1];   //[mcevts_truth]
   Float_t         pdpx_flux[1];   //[mcevts_truth]
   Float_t         pdpy_flux[1];   //[mcevts_truth]
   Float_t         pdpz_flux[1];   //[mcevts_truth]
   Float_t         ppdxdz_flux[1];   //[mcevts_truth]
   Float_t         ppdydz_flux[1];   //[mcevts_truth]
   Float_t         pppz_flux[1];   //[mcevts_truth]
   Int_t           ptype_flux[1];   //[mcevts_truth]
   Float_t         ppvx_flux[1];   //[mcevts_truth]
   Float_t         ppvy_flux[1];   //[mcevts_truth]
   Float_t         ppvz_flux[1];   //[mcevts_truth]
   Float_t         muparpx_flux[1];   //[mcevts_truth]
   Float_t         muparpy_flux[1];   //[mcevts_truth]
   Float_t         muparpz_flux[1];   //[mcevts_truth]
   Float_t         mupare_flux[1];   //[mcevts_truth]
   Int_t           tgen_flux[1];   //[mcevts_truth]
   Int_t           tgptype_flux[1];   //[mcevts_truth]
   Float_t         tgppx_flux[1];   //[mcevts_truth]
   Float_t         tgppy_flux[1];   //[mcevts_truth]
   Float_t         tgppz_flux[1];   //[mcevts_truth]
   Float_t         tprivx_flux[1];   //[mcevts_truth]
   Float_t         tprivy_flux[1];   //[mcevts_truth]
   Float_t         tprivz_flux[1];   //[mcevts_truth]
   Float_t         dk2gen_flux[1];   //[mcevts_truth]
   Float_t         gen2vtx_flux[1];   //[mcevts_truth]
   Float_t         tpx_flux[1];   //[mcevts_truth]
   Float_t         tpy_flux[1];   //[mcevts_truth]
   Float_t         tpz_flux[1];   //[mcevts_truth]
   Int_t           tptype_flux[1];   //[mcevts_truth]
   Int_t           genie_no_primaries;
   Int_t           genie_primaries_pdg[28];   //[genie_no_primaries]
   Float_t         genie_Eng[28];   //[genie_no_primaries]
   Float_t         genie_Px[28];   //[genie_no_primaries]
   Float_t         genie_Py[28];   //[genie_no_primaries]
   Float_t         genie_Pz[28];   //[genie_no_primaries]
   Float_t         genie_P[28];   //[genie_no_primaries]
   Int_t           genie_status_code[28];   //[genie_no_primaries]
   Float_t         genie_mass[28];   //[genie_no_primaries]
   Int_t           genie_trackID[28];   //[genie_no_primaries]
   Int_t           genie_ND[28];   //[genie_no_primaries]
   Int_t           genie_mother[28];   //[genie_no_primaries]
   Int_t           no_primaries;
   Int_t           geant_list_size;
   Int_t           geant_list_size_in_tpcAV;
   Int_t           pdg[229];   //[geant_list_size]
   Int_t           status[229];   //[geant_list_size]
   Float_t         Mass[229];   //[geant_list_size]
   Float_t         Eng[229];   //[geant_list_size]
   Float_t         EndE[229];   //[geant_list_size]
   Float_t         Px[229];   //[geant_list_size]
   Float_t         Py[229];   //[geant_list_size]
   Float_t         Pz[229];   //[geant_list_size]
   Float_t         P[229];   //[geant_list_size]
   Float_t         StartPointx[229];   //[geant_list_size]
   Float_t         StartPointy[229];   //[geant_list_size]
   Float_t         StartPointz[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_StartPointx[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_StartPointy[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_StartPointz[229];   //[geant_list_size]
   Float_t         StartT[229];   //[geant_list_size]
   Float_t         EndPointx[229];   //[geant_list_size]
   Float_t         EndPointy[229];   //[geant_list_size]
   Float_t         EndPointz[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_EndPointx[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_EndPointy[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_EndPointz[229];   //[geant_list_size]
   Float_t         EndT[229];   //[geant_list_size]
   Float_t         theta[229];   //[geant_list_size]
   Float_t         phi[229];   //[geant_list_size]
   Float_t         theta_xz[229];   //[geant_list_size]
   Float_t         theta_yz[229];   //[geant_list_size]
   Float_t         pathlen[229];   //[geant_list_size]
   Int_t           inTPCActive[229];   //[geant_list_size]
   Float_t         StartPointx_tpcAV[229];   //[geant_list_size]
   Float_t         StartPointy_tpcAV[229];   //[geant_list_size]
   Float_t         StartPointz_tpcAV[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_StartPointx_tpcAV[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_StartPointy_tpcAV[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_StartPointz_tpcAV[229];   //[geant_list_size]
   Float_t         StartT_tpcAV[229];   //[geant_list_size]
   Float_t         StartE_tpcAV[229];   //[geant_list_size]
   Float_t         StartP_tpcAV[229];   //[geant_list_size]
   Float_t         StartPx_tpcAV[229];   //[geant_list_size]
   Float_t         StartPy_tpcAV[229];   //[geant_list_size]
   Float_t         StartPz_tpcAV[229];   //[geant_list_size]
   Float_t         EndPointx_tpcAV[229];   //[geant_list_size]
   Float_t         EndPointy_tpcAV[229];   //[geant_list_size]
   Float_t         EndPointz_tpcAV[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_EndPointx_tpcAV[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_EndPointy_tpcAV[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_EndPointz_tpcAV[229];   //[geant_list_size]
   Float_t         EndT_tpcAV[229];   //[geant_list_size]
   Float_t         EndE_tpcAV[229];   //[geant_list_size]
   Float_t         EndP_tpcAV[229];   //[geant_list_size]
   Float_t         EndPx_tpcAV[229];   //[geant_list_size]
   Float_t         EndPy_tpcAV[229];   //[geant_list_size]
   Float_t         EndPz_tpcAV[229];   //[geant_list_size]
   Float_t         pathlen_drifted[229];   //[geant_list_size]
   Int_t           inTPCDrifted[229];   //[geant_list_size]
   Float_t         StartPointx_drifted[229];   //[geant_list_size]
   Float_t         StartPointy_drifted[229];   //[geant_list_size]
   Float_t         StartPointz_drifted[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_StartPointx_drifted[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_StartPointy_drifted[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_StartPointz_drifted[229];   //[geant_list_size]
   Float_t         StartT_drifted[229];   //[geant_list_size]
   Float_t         StartE_drifted[229];   //[geant_list_size]
   Float_t         StartP_drifted[229];   //[geant_list_size]
   Float_t         StartPx_drifted[229];   //[geant_list_size]
   Float_t         StartPy_drifted[229];   //[geant_list_size]
   Float_t         StartPz_drifted[229];   //[geant_list_size]
   Float_t         EndPointx_drifted[229];   //[geant_list_size]
   Float_t         EndPointy_drifted[229];   //[geant_list_size]
   Float_t         EndPointz_drifted[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_EndPointx_drifted[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_EndPointy_drifted[229];   //[geant_list_size]
   Float_t         sp_charge_corrected_EndPointz_drifted[229];   //[geant_list_size]
   Float_t         EndT_drifted[229];   //[geant_list_size]
   Float_t         EndE_drifted[229];   //[geant_list_size]
   Float_t         EndP_drifted[229];   //[geant_list_size]
   Float_t         EndPx_drifted[229];   //[geant_list_size]
   Float_t         EndPy_drifted[229];   //[geant_list_size]
   Float_t         EndPz_drifted[229];   //[geant_list_size]
   Int_t           NumberDaughters[229];   //[geant_list_size]
   Int_t           Mother[229];   //[geant_list_size]
   Int_t           TrackId[229];   //[geant_list_size]
   Int_t           MergedId[229];   //[geant_list_size]
   Int_t           origin[229];   //[geant_list_size]
   Int_t           MCTruthIndex[229];   //[geant_list_size]
   Int_t           process_primary[229];   //[geant_list_size]
   vector<string>  *processname;
   Int_t           NTrTrajPts[18];   //[no_primaries]
   Double_t        TrueTraj_X[18][5000];   //[no_primaries]
   Double_t        TrueTraj_Y[18][5000];   //[no_primaries]
   Double_t        TrueTraj_Z[18][5000];   //[no_primaries]
   Double_t        TrueTraj_E[18][5000];   //[no_primaries]
   Int_t           no_mcshowers;
   Int_t           mcshwr_origin[4];   //[no_mcshowers]
   Int_t           mcshwr_pdg[4];   //[no_mcshowers]
   Int_t           mcshwr_TrackId[4];   //[no_mcshowers]
   vector<string>  *mcshwr_Process;
   Float_t         mcshwr_startX[4];   //[no_mcshowers]
   Float_t         mcshwr_startY[4];   //[no_mcshowers]
   Float_t         mcshwr_startZ[4];   //[no_mcshowers]
   Float_t         mcshwr_endX[4];   //[no_mcshowers]
   Float_t         mcshwr_endY[4];   //[no_mcshowers]
   Float_t         mcshwr_endZ[4];   //[no_mcshowers]
   Float_t         mcshwr_CombEngX[4];   //[no_mcshowers]
   Float_t         mcshwr_CombEngY[4];   //[no_mcshowers]
   Float_t         mcshwr_CombEngZ[4];   //[no_mcshowers]
   Float_t         mcshwr_CombEngPx[4];   //[no_mcshowers]
   Float_t         mcshwr_CombEngPy[4];   //[no_mcshowers]
   Float_t         mcshwr_CombEngPz[4];   //[no_mcshowers]
   Float_t         mcshwr_CombEngE[4];   //[no_mcshowers]
   Float_t         mcshwr_dEdx[4];   //[no_mcshowers]
   Float_t         mcshwr_StartDirX[4];   //[no_mcshowers]
   Float_t         mcshwr_StartDirY[4];   //[no_mcshowers]
   Float_t         mcshwr_StartDirZ[4];   //[no_mcshowers]
   Int_t           mcshwr_isEngDeposited[4];   //[no_mcshowers]
   Int_t           mcshwr_Motherpdg[4];   //[no_mcshowers]
   Int_t           mcshwr_MotherTrkId[4];   //[no_mcshowers]
   vector<string>  *mcshwr_MotherProcess;
   Float_t         mcshwr_MotherstartX[4];   //[no_mcshowers]
   Float_t         mcshwr_MotherstartY[4];   //[no_mcshowers]
   Float_t         mcshwr_MotherstartZ[4];   //[no_mcshowers]
   Float_t         mcshwr_MotherendX[4];   //[no_mcshowers]
   Float_t         mcshwr_MotherendY[4];   //[no_mcshowers]
   Float_t         mcshwr_MotherendZ[4];   //[no_mcshowers]
   Int_t           mcshwr_Ancestorpdg[4];   //[no_mcshowers]
   Int_t           mcshwr_AncesotorTrkId[4];   //[no_mcshowers]
   vector<string>  *mcshwr_AncesotorProcess;
   Float_t         mcshwr_AncestorstartX[4];   //[no_mcshowers]
   Float_t         mcshwr_AncestorstartY[4];   //[no_mcshowers]
   Float_t         mcshwr_AncestorstartZ[4];   //[no_mcshowers]
   Float_t         mcshwr_AncestorendX[4];   //[no_mcshowers]
   Float_t         mcshwr_AncestorendY[4];   //[no_mcshowers]
   Float_t         mcshwr_AncestorendZ[4];   //[no_mcshowers]
   Int_t           no_mctracks;
   Int_t           mctrk_origin[50];   //[no_mctracks]
   Int_t           mctrk_pdg[50];   //[no_mctracks]
   Int_t           mctrk_TrackId[50];   //[no_mctracks]
   vector<string>  *mctrk_Process;
   Float_t         mctrk_startX[50];   //[no_mctracks]
   Float_t         mctrk_startY[50];   //[no_mctracks]
   Float_t         mctrk_startZ[50];   //[no_mctracks]
   Float_t         mctrk_endX[50];   //[no_mctracks]
   Float_t         mctrk_endY[50];   //[no_mctracks]
   Float_t         mctrk_endZ[50];   //[no_mctracks]
   Float_t         mctrk_startX_drifted[50];   //[no_mctracks]
   Float_t         mctrk_startY_drifted[50];   //[no_mctracks]
   Float_t         mctrk_startZ_drifted[50];   //[no_mctracks]
   Float_t         mctrk_endX_drifted[50];   //[no_mctracks]
   Float_t         mctrk_endY_drifted[50];   //[no_mctracks]
   Float_t         mctrk_endZ_drifted[50];   //[no_mctracks]
   Float_t         mctrk_len_drifted[50];   //[no_mctracks]
   Float_t         mctrk_p_drifted[50];   //[no_mctracks]
   Float_t         mctrk_px_drifted[50];   //[no_mctracks]
   Float_t         mctrk_py_drifted[50];   //[no_mctracks]
   Float_t         mctrk_pz_drifted[50];   //[no_mctracks]
   Int_t           mctrk_Motherpdg[50];   //[no_mctracks]
   Int_t           mctrk_MotherTrkId[50];   //[no_mctracks]
   vector<string>  *mctrk_MotherProcess;
   Float_t         mctrk_MotherstartX[50];   //[no_mctracks]
   Float_t         mctrk_MotherstartY[50];   //[no_mctracks]
   Float_t         mctrk_MotherstartZ[50];   //[no_mctracks]
   Float_t         mctrk_MotherendX[50];   //[no_mctracks]
   Float_t         mctrk_MotherendY[50];   //[no_mctracks]
   Float_t         mctrk_MotherendZ[50];   //[no_mctracks]
   Int_t           mctrk_Ancestorpdg[50];   //[no_mctracks]
   Int_t           mctrk_AncesotorTrkId[50];   //[no_mctracks]
   vector<string>  *mctrk_AncesotorProcess;
   Float_t         mctrk_AncestorstartX[50];   //[no_mctracks]
   Float_t         mctrk_AncestorstartY[50];   //[no_mctracks]
   Float_t         mctrk_AncestorstartZ[50];   //[no_mctracks]
   Float_t         mctrk_AncestorendX[50];   //[no_mctracks]
   Float_t         mctrk_AncestorendY[50];   //[no_mctracks]
   Float_t         mctrk_AncestorendZ[50];   //[no_mctracks]
   Short_t         nPFParticles;
   Short_t         pfp_selfID[232];   //[nPFParticles]
   Short_t         pfp_isPrimary[232];   //[nPFParticles]
   Short_t         pfp_numDaughters[232];   //[nPFParticles]
   Short_t         pfp_daughterIDs[232][100];   //[nPFParticles]
   Short_t         pfp_parentID[232];   //[nPFParticles]
   Short_t         pfp_vertexID[232];   //[nPFParticles]
   Short_t         pfp_isShower[232];   //[nPFParticles]
   Short_t         pfp_isTrack[232];   //[nPFParticles]
   Short_t         pfp_trackID[232];   //[nPFParticles]
   Short_t         pfp_showerID[232];   //[nPFParticles]
   Int_t           pfp_pdgCode[232];   //[nPFParticles]
   Short_t         pfp_numClusters[232];   //[nPFParticles]
   Short_t         pfp_clusterIDs[232][100];   //[nPFParticles]
   Short_t         pfp_isNeutrino[232];   //[nPFParticles]
   Short_t         pfp_numNeutrinos;
   Short_t         pfp_neutrinoIDs[10];
   Short_t         nshowers_pandora;
   Short_t         showerID_pandora[165];   //[nshowers_pandora]
   Short_t         shwr_bestplane_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_length_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_theta_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_thetaxz_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_thetayz_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_phi_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_startdcosx_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_startdcosy_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_startdcosz_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_startx_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_starty_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_startz_pandora[165];   //[nshowers_pandora]
   Float_t         shwr_totEng_pandora[165][3];   //[nshowers_pandora]
   Float_t         shwr_dedx_pandora[165][3];   //[nshowers_pandora]
   Float_t         shwr_mipEng_pandora[165][3];   //[nshowers_pandora]
   Short_t         shwr_hasPFParticle_pandora[165];   //[nshowers_pandora]
   Short_t         shwr_PFParticleID_pandora[165];   //[nshowers_pandora]
   Short_t         nshowers_trajcluster;
   Short_t         showerID_trajcluster[1];   //[nshowers_trajcluster]
   Short_t         shwr_bestplane_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_length_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_theta_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_thetaxz_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_thetayz_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_phi_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_startdcosx_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_startdcosy_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_startdcosz_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_startx_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_starty_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_startz_trajcluster[1];   //[nshowers_trajcluster]
   Float_t         shwr_totEng_trajcluster[1][3];   //[nshowers_trajcluster]
   Float_t         shwr_dedx_trajcluster[1][3];   //[nshowers_trajcluster]
   Float_t         shwr_mipEng_trajcluster[1][3];   //[nshowers_trajcluster]
   Short_t         shwr_hasPFParticle_trajcluster[1];   //[nshowers_trajcluster]
   Short_t         shwr_PFParticleID_trajcluster[1];   //[nshowers_trajcluster]
   Short_t         ntracks_pandora;
   Short_t         trkId_pandora[65];   //[ntracks_pandora]
   Short_t         trkncosmictags_tagger_pandora[65];   //[ntracks_pandora]
   Float_t         trkcosmicscore_tagger_pandora[65];   //[ntracks_pandora]
   Short_t         trkcosmictype_tagger_pandora[65];   //[ntracks_pandora]
   Short_t         trkncosmictags_containmenttagger_pandora[65];   //[ntracks_pandora]
   Float_t         trkcosmicscore_containmenttagger_pandora[65];   //[ntracks_pandora]
   Short_t         trkcosmictype_containmenttagger_pandora[65];   //[ntracks_pandora]
   Short_t         trkncosmictags_flashmatch_pandora[65];   //[ntracks_pandora]
   Float_t         trkcosmicscore_flashmatch_pandora[65];   //[ntracks_pandora]
   Short_t         trkcosmictype_flashmatch_pandora[65];   //[ntracks_pandora]
   Float_t         trkke_pandora[65][3];   //[ntracks_pandora]
   Float_t         trkrange_pandora[65][3];   //[ntracks_pandora]
   Int_t           trkidtruth_pandora[65][3];   //[ntracks_pandora]
   Short_t         trkorigin_pandora[65][3];   //[ntracks_pandora]
   Int_t           trkpdgtruth_pandora[65][3];   //[ntracks_pandora]
   Float_t         trkefftruth_pandora[65][3];   //[ntracks_pandora]
   Float_t         trkpurtruth_pandora[65][3];   //[ntracks_pandora]
   Float_t         trkpitchc_pandora[65][3];   //[ntracks_pandora]
   Short_t         ntrkhits_pandora[65][3];   //[ntracks_pandora]
   Float_t         trkdedx_pandora[65][3][2000];   //[ntracks_pandora]
   Float_t         trkdqdx_pandora[65][3][2000];   //[ntracks_pandora]
   Float_t         trkresrg_pandora[65][3][2000];   //[ntracks_pandora]
   Float_t         trkxyz_pandora[65][3][2000][3];   //[ntracks_pandora]
   Float_t         trkstartx_pandora[65];   //[ntracks_pandora]
   Float_t         trkstarty_pandora[65];   //[ntracks_pandora]
   Float_t         trkstartz_pandora[65];   //[ntracks_pandora]
   Float_t         trkstartd_pandora[65];   //[ntracks_pandora]
   Float_t         trkendx_pandora[65];   //[ntracks_pandora]
   Float_t         trkendy_pandora[65];   //[ntracks_pandora]
   Float_t         trkendz_pandora[65];   //[ntracks_pandora]
   Float_t         trkendd_pandora[65];   //[ntracks_pandora]
   Float_t         trkACpierceT0_pandora[65];   //[ntracks_pandora]
   Float_t         trkflashT0_pandora[65];   //[ntracks_pandora]
   Float_t         trktrueT0_pandora[65];   //[ntracks_pandora]
   Int_t           trkg4id_pandora[65];   //[ntracks_pandora]
   Int_t           trkorig_pandora[65];   //[ntracks_pandora]
   Float_t         trkpurity_pandora[65];   //[ntracks_pandora]
   Float_t         trkcompleteness_pandora[65];   //[ntracks_pandora]
   Float_t         trktheta_pandora[65];   //[ntracks_pandora]
   Float_t         trkphi_pandora[65];   //[ntracks_pandora]
   Float_t         trkstartdcosx_pandora[65];   //[ntracks_pandora]
   Float_t         trkstartdcosy_pandora[65];   //[ntracks_pandora]
   Float_t         trkstartdcosz_pandora[65];   //[ntracks_pandora]
   Float_t         trkenddcosx_pandora[65];   //[ntracks_pandora]
   Float_t         trkenddcosy_pandora[65];   //[ntracks_pandora]
   Float_t         trkenddcosz_pandora[65];   //[ntracks_pandora]
   Float_t         trkthetaxz_pandora[65];   //[ntracks_pandora]
   Float_t         trkthetayz_pandora[65];   //[ntracks_pandora]
   Float_t         trkmom_pandora[65];   //[ntracks_pandora]
   Float_t         trkmomrange_pandora[65];   //[ntracks_pandora]
   Float_t         trkmommschi2_pandora[65];   //[ntracks_pandora]
   Float_t         trkmommsllhd_pandora[65];   //[ntracks_pandora]
   Float_t         trkmcsfwdmom_pandora[65];   //[ntracks_pandora]
   Float_t         trkmcsfwdll_pandora[65];   //[ntracks_pandora]
   Float_t         trkmcsfwderr_pandora[65];   //[ntracks_pandora]
   Float_t         trkmcsbwdmom_pandora[65];   //[ntracks_pandora]
   Float_t         trkmcsbwdll_pandora[65];   //[ntracks_pandora]
   Float_t         trkmcsbwderr_pandora[65];   //[ntracks_pandora]
   Float_t         trklen_pandora[65];   //[ntracks_pandora]
   Short_t         trksvtxid_pandora[65];   //[ntracks_pandora]
   Short_t         trkevtxid_pandora[65];   //[ntracks_pandora]
   Int_t           trkntraj_pandora[65];   //[ntracks_pandora]
   Int_t           trkpidpdg_pandora[65][3];   //[ntracks_pandora]
   Float_t         trkpidchi_pandora[65][3];   //[ntracks_pandora]
   Float_t         trkpidchipr_pandora[65][3];   //[ntracks_pandora]
   Float_t         trkpidchika_pandora[65][3];   //[ntracks_pandora]
   Float_t         trkpidchipi_pandora[65][3];   //[ntracks_pandora]
   Float_t         trkpidchimu_pandora[65][3];   //[ntracks_pandora]
   Float_t         trkpidpida_pandora[65][3];   //[ntracks_pandora]
   Short_t         trkpidbestplane_pandora[65];   //[ntracks_pandora]
   Short_t         trkhasPFParticle_pandora[65];   //[ntracks_pandora]
   Short_t         trkPFParticleID_pandora[65];   //[ntracks_pandora]
   Short_t         ntracks_pandoraKalmanTrack;
   Short_t         trkId_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Short_t         trkncosmictags_tagger_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkcosmicscore_tagger_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Short_t         trkcosmictype_tagger_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Short_t         trkncosmictags_containmenttagger_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkcosmicscore_containmenttagger_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Short_t         trkcosmictype_containmenttagger_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Short_t         trkncosmictags_flashmatch_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkcosmicscore_flashmatch_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Short_t         trkcosmictype_flashmatch_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkke_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkrange_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Int_t           trkidtruth_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Short_t         trkorigin_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Int_t           trkpdgtruth_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkefftruth_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkpurtruth_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkpitchc_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Short_t         ntrkhits_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkdedx_pandoraKalmanTrack[64][3][2000];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkdqdx_pandoraKalmanTrack[64][3][2000];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkresrg_pandoraKalmanTrack[64][3][2000];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkxyz_pandoraKalmanTrack[64][3][2000][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkstartx_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkstarty_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkstartz_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkstartd_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkendx_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkendy_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkendz_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkendd_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkACpierceT0_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkflashT0_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trktrueT0_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Int_t           trkg4id_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Int_t           trkorig_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkpurity_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkcompleteness_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trktheta_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkphi_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkstartdcosx_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkstartdcosy_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkstartdcosz_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkenddcosx_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkenddcosy_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkenddcosz_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkthetaxz_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkthetayz_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkmom_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkmomrange_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkmommschi2_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkmommsllhd_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkmcsfwdmom_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkmcsfwdll_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkmcsfwderr_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkmcsbwdmom_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkmcsbwdll_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkmcsbwderr_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Float_t         trklen_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Short_t         trksvtxid_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Short_t         trkevtxid_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Int_t           trkntraj_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Int_t           trkpidpdg_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkpidchi_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkpidchipr_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkpidchika_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkpidchipi_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkpidchimu_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Float_t         trkpidpida_pandoraKalmanTrack[64][3];   //[ntracks_pandoraKalmanTrack]
   Short_t         trkpidbestplane_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Short_t         trkhasPFParticle_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Short_t         trkPFParticleID_pandoraKalmanTrack[64];   //[ntracks_pandoraKalmanTrack]
   Short_t         ntracks_pmtrack;
   Short_t         trkId_pmtrack[145];   //[ntracks_pmtrack]
   Short_t         trkncosmictags_tagger_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkcosmicscore_tagger_pmtrack[145];   //[ntracks_pmtrack]
   Short_t         trkcosmictype_tagger_pmtrack[145];   //[ntracks_pmtrack]
   Short_t         trkncosmictags_containmenttagger_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkcosmicscore_containmenttagger_pmtrack[145];   //[ntracks_pmtrack]
   Short_t         trkcosmictype_containmenttagger_pmtrack[145];   //[ntracks_pmtrack]
   Short_t         trkncosmictags_flashmatch_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkcosmicscore_flashmatch_pmtrack[145];   //[ntracks_pmtrack]
   Short_t         trkcosmictype_flashmatch_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkke_pmtrack[145][3];   //[ntracks_pmtrack]
   Float_t         trkrange_pmtrack[145][3];   //[ntracks_pmtrack]
   Int_t           trkidtruth_pmtrack[145][3];   //[ntracks_pmtrack]
   Short_t         trkorigin_pmtrack[145][3];   //[ntracks_pmtrack]
   Int_t           trkpdgtruth_pmtrack[145][3];   //[ntracks_pmtrack]
   Float_t         trkefftruth_pmtrack[145][3];   //[ntracks_pmtrack]
   Float_t         trkpurtruth_pmtrack[145][3];   //[ntracks_pmtrack]
   Float_t         trkpitchc_pmtrack[145][3];   //[ntracks_pmtrack]
   Short_t         ntrkhits_pmtrack[145][3];   //[ntracks_pmtrack]
   Float_t         trkdedx_pmtrack[145][3][2000];   //[ntracks_pmtrack]
   Float_t         trkdqdx_pmtrack[145][3][2000];   //[ntracks_pmtrack]
   Float_t         trkresrg_pmtrack[145][3][2000];   //[ntracks_pmtrack]
   Float_t         trkxyz_pmtrack[145][3][2000][3];   //[ntracks_pmtrack]
   Float_t         trkstartx_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkstarty_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkstartz_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkstartd_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkendx_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkendy_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkendz_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkendd_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkACpierceT0_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkflashT0_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trktrueT0_pmtrack[145];   //[ntracks_pmtrack]
   Int_t           trkg4id_pmtrack[145];   //[ntracks_pmtrack]
   Int_t           trkorig_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkpurity_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkcompleteness_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trktheta_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkphi_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkstartdcosx_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkstartdcosy_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkstartdcosz_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkenddcosx_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkenddcosy_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkenddcosz_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkthetaxz_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkthetayz_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkmom_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkmomrange_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkmommschi2_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkmommsllhd_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkmcsfwdmom_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkmcsfwdll_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkmcsfwderr_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkmcsbwdmom_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkmcsbwdll_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trkmcsbwderr_pmtrack[145];   //[ntracks_pmtrack]
   Float_t         trklen_pmtrack[145];   //[ntracks_pmtrack]
   Short_t         trksvtxid_pmtrack[145];   //[ntracks_pmtrack]
   Short_t         trkevtxid_pmtrack[145];   //[ntracks_pmtrack]
   Int_t           trkntraj_pmtrack[145];   //[ntracks_pmtrack]
   Int_t           trkpidpdg_pmtrack[145][3];   //[ntracks_pmtrack]
   Float_t         trkpidchi_pmtrack[145][3];   //[ntracks_pmtrack]
   Float_t         trkpidchipr_pmtrack[145][3];   //[ntracks_pmtrack]
   Float_t         trkpidchika_pmtrack[145][3];   //[ntracks_pmtrack]
   Float_t         trkpidchipi_pmtrack[145][3];   //[ntracks_pmtrack]
   Float_t         trkpidchimu_pmtrack[145][3];   //[ntracks_pmtrack]
   Float_t         trkpidpida_pmtrack[145][3];   //[ntracks_pmtrack]
   Short_t         trkpidbestplane_pmtrack[145];   //[ntracks_pmtrack]
   Short_t         trkhasPFParticle_pmtrack[145];   //[ntracks_pmtrack]
   Short_t         trkPFParticleID_pmtrack[145];   //[ntracks_pmtrack]
   Short_t         ntracks_pandoraKalmanShower;
   Short_t         trkId_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Short_t         trkncosmictags_tagger_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkcosmicscore_tagger_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Short_t         trkcosmictype_tagger_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Short_t         trkncosmictags_containmenttagger_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkcosmicscore_containmenttagger_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Short_t         trkcosmictype_containmenttagger_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Short_t         trkncosmictags_flashmatch_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkcosmicscore_flashmatch_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Short_t         trkcosmictype_flashmatch_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkke_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkrange_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Int_t           trkidtruth_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Short_t         trkorigin_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Int_t           trkpdgtruth_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkefftruth_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkpurtruth_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkpitchc_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Short_t         ntrkhits_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkdedx_pandoraKalmanShower[137][3][2000];   //[ntracks_pandoraKalmanShower]
   Float_t         trkdqdx_pandoraKalmanShower[137][3][2000];   //[ntracks_pandoraKalmanShower]
   Float_t         trkresrg_pandoraKalmanShower[137][3][2000];   //[ntracks_pandoraKalmanShower]
   Float_t         trkxyz_pandoraKalmanShower[137][3][2000][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkstartx_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkstarty_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkstartz_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkstartd_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkendx_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkendy_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkendz_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkendd_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkACpierceT0_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkflashT0_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trktrueT0_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Int_t           trkg4id_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Int_t           trkorig_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkpurity_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkcompleteness_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trktheta_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkphi_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkstartdcosx_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkstartdcosy_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkstartdcosz_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkenddcosx_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkenddcosy_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkenddcosz_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkthetaxz_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkthetayz_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkmom_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkmomrange_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkmommschi2_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkmommsllhd_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkmcsfwdmom_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkmcsfwdll_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkmcsfwderr_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkmcsbwdmom_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkmcsbwdll_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trkmcsbwderr_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Float_t         trklen_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Short_t         trksvtxid_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Short_t         trkevtxid_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Int_t           trkntraj_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Int_t           trkpidpdg_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkpidchi_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkpidchipr_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkpidchika_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkpidchipi_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkpidchimu_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Float_t         trkpidpida_pandoraKalmanShower[137][3];   //[ntracks_pandoraKalmanShower]
   Short_t         trkpidbestplane_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Short_t         trkhasPFParticle_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Short_t         trkPFParticleID_pandoraKalmanShower[137];   //[ntracks_pandoraKalmanShower]
   Short_t         nvtx_pandora;
   Short_t         vtxId_pandora[231];   //[nvtx_pandora]
   Float_t         vtxx_pandora[231];   //[nvtx_pandora]
   Float_t         vtxy_pandora[231];   //[nvtx_pandora]
   Float_t         vtxz_pandora[231];   //[nvtx_pandora]
   Short_t         vtxhasPFParticle_pandora[231];   //[nvtx_pandora]
   Short_t         vtxPFParticleID_pandora[231];   //[nvtx_pandora]
   Short_t         nvtx_pmtrack;
   Short_t         vtxId_pmtrack[138];   //[nvtx_pmtrack]
   Float_t         vtxx_pmtrack[138];   //[nvtx_pmtrack]
   Float_t         vtxy_pmtrack[138];   //[nvtx_pmtrack]
   Float_t         vtxz_pmtrack[138];   //[nvtx_pmtrack]
   Short_t         vtxhasPFParticle_pmtrack[138];   //[nvtx_pmtrack]
   Short_t         vtxPFParticleID_pmtrack[138];   //[nvtx_pmtrack]
   Short_t         nvtx_trajcluster;
   Short_t         vtxId_trajcluster[144];   //[nvtx_trajcluster]
   Float_t         vtxx_trajcluster[144];   //[nvtx_trajcluster]
   Float_t         vtxy_trajcluster[144];   //[nvtx_trajcluster]
   Float_t         vtxz_trajcluster[144];   //[nvtx_trajcluster]
   Short_t         vtxhasPFParticle_trajcluster[144];   //[nvtx_trajcluster]
   Short_t         vtxPFParticleID_trajcluster[144];   //[nvtx_trajcluster]
   Short_t         nnuvtx_pandora;
   Short_t         nuvtxId_pandora[1];   //[nnuvtx_pandora]
   Float_t         nuvtxx_pandora[1];   //[nnuvtx_pandora]
   Float_t         nuvtxy_pandora[1];   //[nnuvtx_pandora]
   Float_t         nuvtxz_pandora[1];   //[nnuvtx_pandora]
   Int_t           nuvtxpdg_pandora[1];   //[nnuvtx_pandora]
   Short_t         nuvtxhasPFParticle_pandora[1];   //[nnuvtx_pandora]
   Short_t         nuvtxPFParticleID_pandora[1];   //[nnuvtx_pandora]
   Short_t         nfls_simpleFlashBeam;
   Float_t         flsTime_simpleFlashBeam[2];   //[nfls_simpleFlashBeam]
   Float_t         flsPe_simpleFlashBeam[2];   //[nfls_simpleFlashBeam]
   Double_t        flsPePerOpDet_simpleFlashBeam[2][32];   //[nfls_simpleFlashBeam]
   Float_t         flsXcenter_simpleFlashBeam[2];   //[nfls_simpleFlashBeam]
   Float_t         flsYcenter_simpleFlashBeam[2];   //[nfls_simpleFlashBeam]
   Float_t         flsZcenter_simpleFlashBeam[2];   //[nfls_simpleFlashBeam]
   Float_t         flsYwidth_simpleFlashBeam[2];   //[nfls_simpleFlashBeam]
   Float_t         flsZwidth_simpleFlashBeam[2];   //[nfls_simpleFlashBeam]
   Float_t         flsTwidth_simpleFlashBeam[2];   //[nfls_simpleFlashBeam]
   Short_t         nfls_simpleFlashCosmic;
   Float_t         flsTime_simpleFlashCosmic[38];   //[nfls_simpleFlashCosmic]
   Float_t         flsPe_simpleFlashCosmic[38];   //[nfls_simpleFlashCosmic]
   Double_t        flsPePerOpDet_simpleFlashCosmic[38][32];   //[nfls_simpleFlashCosmic]
   Float_t         flsXcenter_simpleFlashCosmic[38];   //[nfls_simpleFlashCosmic]
   Float_t         flsYcenter_simpleFlashCosmic[38];   //[nfls_simpleFlashCosmic]
   Float_t         flsZcenter_simpleFlashCosmic[38];   //[nfls_simpleFlashCosmic]
   Float_t         flsYwidth_simpleFlashCosmic[38];   //[nfls_simpleFlashCosmic]
   Float_t         flsZwidth_simpleFlashCosmic[38];   //[nfls_simpleFlashCosmic]
   Float_t         flsTwidth_simpleFlashCosmic[38];   //[nfls_simpleFlashCosmic]
   Short_t         nfls_simpleFlashBeamLowPE;
   Float_t         flsTime_simpleFlashBeamLowPE[2];   //[nfls_simpleFlashBeamLowPE]
   Float_t         flsPe_simpleFlashBeamLowPE[2];   //[nfls_simpleFlashBeamLowPE]
   Double_t        flsPePerOpDet_simpleFlashBeamLowPE[2][32];   //[nfls_simpleFlashBeamLowPE]
   Float_t         flsXcenter_simpleFlashBeamLowPE[2];   //[nfls_simpleFlashBeamLowPE]
   Float_t         flsYcenter_simpleFlashBeamLowPE[2];   //[nfls_simpleFlashBeamLowPE]
   Float_t         flsZcenter_simpleFlashBeamLowPE[2];   //[nfls_simpleFlashBeamLowPE]
   Float_t         flsYwidth_simpleFlashBeamLowPE[2];   //[nfls_simpleFlashBeamLowPE]
   Float_t         flsZwidth_simpleFlashBeamLowPE[2];   //[nfls_simpleFlashBeamLowPE]
   Float_t         flsTwidth_simpleFlashBeamLowPE[2];   //[nfls_simpleFlashBeamLowPE]

   // List of branches
   TBranch        *b_run;   //!
   TBranch        *b_subrun;   //!
   TBranch        *b_event;   //!
   TBranch        *b_evttime;   //!
   TBranch        *b_beamtime;   //!
   TBranch        *b_pot;   //!
   TBranch        *b_isdata;   //!
   TBranch        *b_taulife;   //!
   TBranch        *b_triggernumber;   //!
   TBranch        *b_triggertime;   //!
   TBranch        *b_beamgatetime;   //!
   TBranch        *b_triggerbits;   //!
   TBranch        *b_potbnb;   //!
   TBranch        *b_potnumitgt;   //!
   TBranch        *b_potnumi101;   //!
   TBranch        *b_evtwgt_funcname;   //!
   TBranch        *b_evtwgt_weight;   //!
   TBranch        *b_evtwgt_nweight;   //!
   TBranch        *b_evtwgt_nfunc;   //!
   TBranch        *b_opfilter_pebeam;   //!
   TBranch        *b_opfilter_peveto;   //!
   TBranch        *b_opfilter_pmtmaxfrac;   //!
   TBranch        *b_swtrigger_name;   //!
   TBranch        *b_swtrigger_triggered;   //!
   TBranch        *b_no_hits;   //!
   TBranch        *b_no_hits_stored;   //!
   TBranch        *b_hit_plane;   //!
   TBranch        *b_hit_wire;   //!
   TBranch        *b_hit_channel;   //!
   TBranch        *b_hit_peakT;   //!
   TBranch        *b_hit_charge;   //!
   TBranch        *b_hit_ph;   //!
   TBranch        *b_hit_startT;   //!
   TBranch        *b_hit_endT;   //!
   TBranch        *b_hit_rms;   //!
   TBranch        *b_hit_trueX;   //!
   TBranch        *b_hit_goodnessOfFit;   //!
   TBranch        *b_hit_multiplicity;   //!
   TBranch        *b_hit_trkid;   //!
   TBranch        *b_hit_trkKey;   //!
   TBranch        *b_hit_clusterid;   //!
   TBranch        *b_hit_clusterKey;   //!
   TBranch        *b_hit_nelec;   //!
   TBranch        *b_hit_energy;   //!
   TBranch        *b_nclusters;   //!
   TBranch        *b_clusterId;   //!
   TBranch        *b_clusterView;   //!
   TBranch        *b_cluster_StartCharge;   //!
   TBranch        *b_cluster_StartAngle;   //!
   TBranch        *b_cluster_EndCharge;   //!
   TBranch        *b_cluster_EndAngle;   //!
   TBranch        *b_cluster_Integral;   //!
   TBranch        *b_cluster_IntegralAverage;   //!
   TBranch        *b_cluster_SummedADC;   //!
   TBranch        *b_cluster_SummedADCaverage;   //!
   TBranch        *b_cluster_MultipleHitDensity;   //!
   TBranch        *b_cluster_Width;   //!
   TBranch        *b_cluster_NHits;   //!
   TBranch        *b_cluster_StartWire;   //!
   TBranch        *b_cluster_StartTick;   //!
   TBranch        *b_cluster_EndWire;   //!
   TBranch        *b_cluster_EndTick;   //!
   TBranch        *b_cluncosmictags_tagger;   //!
   TBranch        *b_clucosmicscore_tagger;   //!
   TBranch        *b_clucosmictype_tagger;   //!
   TBranch        *b_kNFlashAlgos;   //!
   TBranch        *b_kNTracker;   //!
   TBranch        *b_kNVertexAlgos;   //!
   TBranch        *b_kNNeutrinoVertexAlgos;   //!
   TBranch        *b_kNShowerAlgos;   //!
   TBranch        *b_mcevts_truth;   //!
   TBranch        *b_nuPDG_truth;   //!
   TBranch        *b_ccnc_truth;   //!
   TBranch        *b_mode_truth;   //!
   TBranch        *b_enu_truth;   //!
   TBranch        *b_Q2_truth;   //!
   TBranch        *b_W_truth;   //!
   TBranch        *b_X_truth;   //!
   TBranch        *b_Y_truth;   //!
   TBranch        *b_hitnuc_truth;   //!
   TBranch        *b_nuvtxx_truth;   //!
   TBranch        *b_nuvtxy_truth;   //!
   TBranch        *b_nuvtxz_truth;   //!
   TBranch        *b_sp_charge_corrected_nuvtxx_truth;   //!
   TBranch        *b_sp_charge_corrected_nuvtxy_truth;   //!
   TBranch        *b_sp_charge_corrected_nuvtxz_truth;   //!
   TBranch        *b_nu_dcosx_truth;   //!
   TBranch        *b_nu_dcosy_truth;   //!
   TBranch        *b_nu_dcosz_truth;   //!
   TBranch        *b_lep_mom_truth;   //!
   TBranch        *b_lep_dcosx_truth;   //!
   TBranch        *b_lep_dcosy_truth;   //!
   TBranch        *b_lep_dcosz_truth;   //!
   TBranch        *b_vx_flux;   //!
   TBranch        *b_vy_flux;   //!
   TBranch        *b_vz_flux;   //!
   TBranch        *b_pdpx_flux;   //!
   TBranch        *b_pdpy_flux;   //!
   TBranch        *b_pdpz_flux;   //!
   TBranch        *b_ppdxdz_flux;   //!
   TBranch        *b_ppdydz_flux;   //!
   TBranch        *b_pppz_flux;   //!
   TBranch        *b_ptype_flux;   //!
   TBranch        *b_ppvx_flux;   //!
   TBranch        *b_ppvy_flux;   //!
   TBranch        *b_ppvz_flux;   //!
   TBranch        *b_muparpx_flux;   //!
   TBranch        *b_muparpy_flux;   //!
   TBranch        *b_muparpz_flux;   //!
   TBranch        *b_mupare_flux;   //!
   TBranch        *b_tgen_flux;   //!
   TBranch        *b_tgptype_flux;   //!
   TBranch        *b_tgppx_flux;   //!
   TBranch        *b_tgppy_flux;   //!
   TBranch        *b_tgppz_flux;   //!
   TBranch        *b_tprivx_flux;   //!
   TBranch        *b_tprivy_flux;   //!
   TBranch        *b_tprivz_flux;   //!
   TBranch        *b_dk2gen_flux;   //!
   TBranch        *b_gen2vtx_flux;   //!
   TBranch        *b_tpx_flux;   //!
   TBranch        *b_tpy_flux;   //!
   TBranch        *b_tpz_flux;   //!
   TBranch        *b_tptype_flux;   //!
   TBranch        *b_genie_no_primaries;   //!
   TBranch        *b_genie_primaries_pdg;   //!
   TBranch        *b_genie_Eng;   //!
   TBranch        *b_genie_Px;   //!
   TBranch        *b_genie_Py;   //!
   TBranch        *b_genie_Pz;   //!
   TBranch        *b_genie_P;   //!
   TBranch        *b_genie_status_code;   //!
   TBranch        *b_genie_mass;   //!
   TBranch        *b_genie_trackID;   //!
   TBranch        *b_genie_ND;   //!
   TBranch        *b_genie_mother;   //!
   TBranch        *b_no_primaries;   //!
   TBranch        *b_geant_list_size;   //!
   TBranch        *b_geant_list_size_in_tpcAV;   //!
   TBranch        *b_pdg;   //!
   TBranch        *b_status;   //!
   TBranch        *b_Mass;   //!
   TBranch        *b_Eng;   //!
   TBranch        *b_EndE;   //!
   TBranch        *b_Px;   //!
   TBranch        *b_Py;   //!
   TBranch        *b_Pz;   //!
   TBranch        *b_P;   //!
   TBranch        *b_StartPointx;   //!
   TBranch        *b_StartPointy;   //!
   TBranch        *b_StartPointz;   //!
   TBranch        *b_sp_charge_corrected_StartPointx;   //!
   TBranch        *b_sp_charge_corrected_StartPointy;   //!
   TBranch        *b_sp_charge_corrected_StartPointz;   //!
   TBranch        *b_StartT;   //!
   TBranch        *b_EndPointx;   //!
   TBranch        *b_EndPointy;   //!
   TBranch        *b_EndPointz;   //!
   TBranch        *b_sp_charge_corrected_EndPointx;   //!
   TBranch        *b_sp_charge_corrected_EndPointy;   //!
   TBranch        *b_sp_charge_corrected_EndPointz;   //!
   TBranch        *b_EndT;   //!
   TBranch        *b_theta;   //!
   TBranch        *b_phi;   //!
   TBranch        *b_theta_xz;   //!
   TBranch        *b_theta_yz;   //!
   TBranch        *b_pathlen;   //!
   TBranch        *b_inTPCActive;   //!
   TBranch        *b_StartPointx_tpcAV;   //!
   TBranch        *b_StartPointy_tpcAV;   //!
   TBranch        *b_StartPointz_tpcAV;   //!
   TBranch        *b_sp_charge_corrected_StartPointx_tpcAV;   //!
   TBranch        *b_sp_charge_corrected_StartPointy_tpcAV;   //!
   TBranch        *b_sp_charge_corrected_StartPointz_tpcAV;   //!
   TBranch        *b_StartT_tpcAV;   //!
   TBranch        *b_StartE_tpcAV;   //!
   TBranch        *b_StartP_tpcAV;   //!
   TBranch        *b_StartPx_tpcAV;   //!
   TBranch        *b_StartPy_tpcAV;   //!
   TBranch        *b_StartPz_tpcAV;   //!
   TBranch        *b_EndPointx_tpcAV;   //!
   TBranch        *b_EndPointy_tpcAV;   //!
   TBranch        *b_EndPointz_tpcAV;   //!
   TBranch        *b_sp_charge_corrected_EndPointx_tpcAV;   //!
   TBranch        *b_sp_charge_corrected_EndPointy_tpcAV;   //!
   TBranch        *b_sp_charge_corrected_EndPointz_tpcAV;   //!
   TBranch        *b_EndT_tpcAV;   //!
   TBranch        *b_EndE_tpcAV;   //!
   TBranch        *b_EndP_tpcAV;   //!
   TBranch        *b_EndPx_tpcAV;   //!
   TBranch        *b_EndPy_tpcAV;   //!
   TBranch        *b_EndPz_tpcAV;   //!
   TBranch        *b_pathlen_drifted;   //!
   TBranch        *b_inTPCDrifted;   //!
   TBranch        *b_StartPointx_drifted;   //!
   TBranch        *b_StartPointy_drifted;   //!
   TBranch        *b_StartPointz_drifted;   //!
   TBranch        *b_sp_charge_corrected_StartPointx_drifted;   //!
   TBranch        *b_sp_charge_corrected_StartPointy_drifted;   //!
   TBranch        *b_sp_charge_corrected_StartPointz_drifted;   //!
   TBranch        *b_StartT_drifted;   //!
   TBranch        *b_StartE_drifted;   //!
   TBranch        *b_StartP_drifted;   //!
   TBranch        *b_StartPx_drifted;   //!
   TBranch        *b_StartPy_drifted;   //!
   TBranch        *b_StartPz_drifted;   //!
   TBranch        *b_EndPointx_drifted;   //!
   TBranch        *b_EndPointy_drifted;   //!
   TBranch        *b_EndPointz_drifted;   //!
   TBranch        *b_sp_charge_corrected_EndPointx_drifted;   //!
   TBranch        *b_sp_charge_corrected_EndPointy_drifted;   //!
   TBranch        *b_sp_charge_corrected_EndPointz_drifted;   //!
   TBranch        *b_EndT_drifted;   //!
   TBranch        *b_EndE_drifted;   //!
   TBranch        *b_EndP_drifted;   //!
   TBranch        *b_EndPx_drifted;   //!
   TBranch        *b_EndPy_drifted;   //!
   TBranch        *b_EndPz_drifted;   //!
   TBranch        *b_NumberDaughters;   //!
   TBranch        *b_Mother;   //!
   TBranch        *b_TrackId;   //!
   TBranch        *b_MergedId;   //!
   TBranch        *b_origin;   //!
   TBranch        *b_MCTruthIndex;   //!
   TBranch        *b_process_primary;   //!
   TBranch        *b_processname;   //!
   TBranch        *b_NTrTrajPts;   //!
   TBranch        *b_TrueTraj_X;   //!
   TBranch        *b_TrueTraj_Y;   //!
   TBranch        *b_TrueTraj_Z;   //!
   TBranch        *b_TrueTraj_E;   //!
   TBranch        *b_no_mcshowers;   //!
   TBranch        *b_mcshwr_origin;   //!
   TBranch        *b_mcshwr_pdg;   //!
   TBranch        *b_mcshwr_TrackId;   //!
   TBranch        *b_mcshwr_Process;   //!
   TBranch        *b_mcshwr_startX;   //!
   TBranch        *b_mcshwr_startY;   //!
   TBranch        *b_mcshwr_startZ;   //!
   TBranch        *b_mcshwr_endX;   //!
   TBranch        *b_mcshwr_endY;   //!
   TBranch        *b_mcshwr_endZ;   //!
   TBranch        *b_mcshwr_CombEngX;   //!
   TBranch        *b_mcshwr_CombEngY;   //!
   TBranch        *b_mcshwr_CombEngZ;   //!
   TBranch        *b_mcshwr_CombEngPx;   //!
   TBranch        *b_mcshwr_CombEngPy;   //!
   TBranch        *b_mcshwr_CombEngPz;   //!
   TBranch        *b_mcshwr_CombEngE;   //!
   TBranch        *b_mcshwr_dEdx;   //!
   TBranch        *b_mcshwr_StartDirX;   //!
   TBranch        *b_mcshwr_StartDirY;   //!
   TBranch        *b_mcshwr_StartDirZ;   //!
   TBranch        *b_mcshwr_isEngDeposited;   //!
   TBranch        *b_mcshwr_Motherpdg;   //!
   TBranch        *b_mcshwr_MotherTrkId;   //!
   TBranch        *b_mcshwr_MotherProcess;   //!
   TBranch        *b_mcshwr_MotherstartX;   //!
   TBranch        *b_mcshwr_MotherstartY;   //!
   TBranch        *b_mcshwr_MotherstartZ;   //!
   TBranch        *b_mcshwr_MotherendX;   //!
   TBranch        *b_mcshwr_MotherendY;   //!
   TBranch        *b_mcshwr_MotherendZ;   //!
   TBranch        *b_mcshwr_Ancestorpdg;   //!
   TBranch        *b_mcshwr_AncesotorTrkId;   //!
   TBranch        *b_mcshwr_AncesotorProcess;   //!
   TBranch        *b_mcshwr_AncestorstartX;   //!
   TBranch        *b_mcshwr_AncestorstartY;   //!
   TBranch        *b_mcshwr_AncestorstartZ;   //!
   TBranch        *b_mcshwr_AncestorendX;   //!
   TBranch        *b_mcshwr_AncestorendY;   //!
   TBranch        *b_mcshwr_AncestorendZ;   //!
   TBranch        *b_no_mctracks;   //!
   TBranch        *b_mctrk_origin;   //!
   TBranch        *b_mctrk_pdg;   //!
   TBranch        *b_mctrk_TrackId;   //!
   TBranch        *b_mctrk_Process;   //!
   TBranch        *b_mctrk_startX;   //!
   TBranch        *b_mctrk_startY;   //!
   TBranch        *b_mctrk_startZ;   //!
   TBranch        *b_mctrk_endX;   //!
   TBranch        *b_mctrk_endY;   //!
   TBranch        *b_mctrk_endZ;   //!
   TBranch        *b_mctrk_startX_drifted;   //!
   TBranch        *b_mctrk_startY_drifted;   //!
   TBranch        *b_mctrk_startZ_drifted;   //!
   TBranch        *b_mctrk_endX_drifted;   //!
   TBranch        *b_mctrk_endY_drifted;   //!
   TBranch        *b_mctrk_endZ_drifted;   //!
   TBranch        *b_mctrk_len_drifted;   //!
   TBranch        *b_mctrk_p_drifted;   //!
   TBranch        *b_mctrk_px_drifted;   //!
   TBranch        *b_mctrk_py_drifted;   //!
   TBranch        *b_mctrk_pz_drifted;   //!
   TBranch        *b_mctrk_Motherpdg;   //!
   TBranch        *b_mctrk_MotherTrkId;   //!
   TBranch        *b_mctrk_MotherProcess;   //!
   TBranch        *b_mctrk_MotherstartX;   //!
   TBranch        *b_mctrk_MotherstartY;   //!
   TBranch        *b_mctrk_MotherstartZ;   //!
   TBranch        *b_mctrk_MotherendX;   //!
   TBranch        *b_mctrk_MotherendY;   //!
   TBranch        *b_mctrk_MotherendZ;   //!
   TBranch        *b_mctrk_Ancestorpdg;   //!
   TBranch        *b_mctrk_AncesotorTrkId;   //!
   TBranch        *b_mctrk_AncesotorProcess;   //!
   TBranch        *b_mctrk_AncestorstartX;   //!
   TBranch        *b_mctrk_AncestorstartY;   //!
   TBranch        *b_mctrk_AncestorstartZ;   //!
   TBranch        *b_mctrk_AncestorendX;   //!
   TBranch        *b_mctrk_AncestorendY;   //!
   TBranch        *b_mctrk_AncestorendZ;   //!
   TBranch        *b_nPFParticles;   //!
   TBranch        *b_pfp_selfID;   //!
   TBranch        *b_pfp_isPrimary;   //!
   TBranch        *b_pfp_numDaughters;   //!
   TBranch        *b_pfp_daughterIDs;   //!
   TBranch        *b_pfp_parentID;   //!
   TBranch        *b_pfp_vertexID;   //!
   TBranch        *b_pfp_isShower;   //!
   TBranch        *b_pfp_isTrack;   //!
   TBranch        *b_pfp_trackID;   //!
   TBranch        *b_pfp_showerID;   //!
   TBranch        *b_pfp_pdgCode;   //!
   TBranch        *b_pfp_numClusters;   //!
   TBranch        *b_pfp_clusterIDs;   //!
   TBranch        *b_pfp_isNeutrino;   //!
   TBranch        *b_pfp_numNeutrinos;   //!
   TBranch        *b_pfp_neutrinoIDs;   //!
   TBranch        *b_nshowers_pandora;   //!
   TBranch        *b_showerID_pandora;   //!
   TBranch        *b_shwr_bestplane_pandora;   //!
   TBranch        *b_shwr_length_pandora;   //!
   TBranch        *b_shwr_theta_pandora;   //!
   TBranch        *b_shwr_thetaxz_pandora;   //!
   TBranch        *b_shwr_thetayz_pandora;   //!
   TBranch        *b_shwr_phi_pandora;   //!
   TBranch        *b_shwr_startdcosx_pandora;   //!
   TBranch        *b_shwr_startdcosy_pandora;   //!
   TBranch        *b_shwr_startdcosz_pandora;   //!
   TBranch        *b_shwr_startx_pandora;   //!
   TBranch        *b_shwr_starty_pandora;   //!
   TBranch        *b_shwr_startz_pandora;   //!
   TBranch        *b_shwr_totEng_pandora;   //!
   TBranch        *b_shwr_dedx_pandora;   //!
   TBranch        *b_shwr_mipEng_pandora;   //!
   TBranch        *b_shwr_hasPFParticle_pandora;   //!
   TBranch        *b_shwr_PFParticleID_pandora;   //!
   TBranch        *b_nshowers_trajcluster;   //!
   TBranch        *b_showerID_trajcluster;   //!
   TBranch        *b_shwr_bestplane_trajcluster;   //!
   TBranch        *b_shwr_length_trajcluster;   //!
   TBranch        *b_shwr_theta_trajcluster;   //!
   TBranch        *b_shwr_thetaxz_trajcluster;   //!
   TBranch        *b_shwr_thetayz_trajcluster;   //!
   TBranch        *b_shwr_phi_trajcluster;   //!
   TBranch        *b_shwr_startdcosx_trajcluster;   //!
   TBranch        *b_shwr_startdcosy_trajcluster;   //!
   TBranch        *b_shwr_startdcosz_trajcluster;   //!
   TBranch        *b_shwr_startx_trajcluster;   //!
   TBranch        *b_shwr_starty_trajcluster;   //!
   TBranch        *b_shwr_startz_trajcluster;   //!
   TBranch        *b_shwr_totEng_trajcluster;   //!
   TBranch        *b_shwr_dedx_trajcluster;   //!
   TBranch        *b_shwr_mipEng_trajcluster;   //!
   TBranch        *b_shwr_hasPFParticle_trajcluster;   //!
   TBranch        *b_shwr_PFParticleID_trajcluster;   //!
   TBranch        *b_ntracks_pandora;   //!
   TBranch        *b_trkId_pandora;   //!
   TBranch        *b_trkncosmictags_tagger_pandora;   //!
   TBranch        *b_trkcosmicscore_tagger_pandora;   //!
   TBranch        *b_trkcosmictype_tagger_pandora;   //!
   TBranch        *b_trkncosmictags_containmenttagger_pandora;   //!
   TBranch        *b_trkcosmicscore_containmenttagger_pandora;   //!
   TBranch        *b_trkcosmictype_containmenttagger_pandora;   //!
   TBranch        *b_trkncosmictags_flashmatch_pandora;   //!
   TBranch        *b_trkcosmicscore_flashmatch_pandora;   //!
   TBranch        *b_trkcosmictype_flashmatch_pandora;   //!
   TBranch        *b_trkke_pandora;   //!
   TBranch        *b_trkrange_pandora;   //!
   TBranch        *b_trkidtruth_pandora;   //!
   TBranch        *b_trkorigin_pandora;   //!
   TBranch        *b_trkpdgtruth_pandora;   //!
   TBranch        *b_trkefftruth_pandora;   //!
   TBranch        *b_trkpurtruth_pandora;   //!
   TBranch        *b_trkpitchc_pandora;   //!
   TBranch        *b_ntrkhits_pandora;   //!
   TBranch        *b_trkdedx_pandora;   //!
   TBranch        *b_trkdqdx_pandora;   //!
   TBranch        *b_trkresrg_pandora;   //!
   TBranch        *b_trkxyz_pandora;   //!
   TBranch        *b_trkstartx_pandora;   //!
   TBranch        *b_trkstarty_pandora;   //!
   TBranch        *b_trkstartz_pandora;   //!
   TBranch        *b_trkstartd_pandora;   //!
   TBranch        *b_trkendx_pandora;   //!
   TBranch        *b_trkendy_pandora;   //!
   TBranch        *b_trkendz_pandora;   //!
   TBranch        *b_trkendd_pandora;   //!
   TBranch        *b_trkACpierceT0_pandora;   //!
   TBranch        *b_trkflashT0_pandora;   //!
   TBranch        *b_trktrueT0_pandora;   //!
   TBranch        *b_trkg4id_pandora;   //!
   TBranch        *b_trkorig_pandora;   //!
   TBranch        *b_trkpurity_pandora;   //!
   TBranch        *b_trkcompleteness_pandora;   //!
   TBranch        *b_trktheta_pandora;   //!
   TBranch        *b_trkphi_pandora;   //!
   TBranch        *b_trkstartdcosx_pandora;   //!
   TBranch        *b_trkstartdcosy_pandora;   //!
   TBranch        *b_trkstartdcosz_pandora;   //!
   TBranch        *b_trkenddcosx_pandora;   //!
   TBranch        *b_trkenddcosy_pandora;   //!
   TBranch        *b_trkenddcosz_pandora;   //!
   TBranch        *b_trkthetaxz_pandora;   //!
   TBranch        *b_trkthetayz_pandora;   //!
   TBranch        *b_trkmom_pandora;   //!
   TBranch        *b_trkmomrange_pandora;   //!
   TBranch        *b_trkmommschi2_pandora;   //!
   TBranch        *b_trkmommsllhd_pandora;   //!
   TBranch        *b_trkmcsfwdmom_pandora;   //!
   TBranch        *b_trkmcsfwdll_pandora;   //!
   TBranch        *b_trkmcsfwderr_pandora;   //!
   TBranch        *b_trkmcsbwdmom_pandora;   //!
   TBranch        *b_trkmcsbwdll_pandora;   //!
   TBranch        *b_trkmcsbwderr_pandora;   //!
   TBranch        *b_trklen_pandora;   //!
   TBranch        *b_trksvtxid_pandora;   //!
   TBranch        *b_trkevtxid_pandora;   //!
   TBranch        *b_trkntraj_pandora;   //!
   TBranch        *b_trkpidpdg_pandora;   //!
   TBranch        *b_trkpidchi_pandora;   //!
   TBranch        *b_trkpidchipr_pandora;   //!
   TBranch        *b_trkpidchika_pandora;   //!
   TBranch        *b_trkpidchipi_pandora;   //!
   TBranch        *b_trkpidchimu_pandora;   //!
   TBranch        *b_trkpidpida_pandora;   //!
   TBranch        *b_trkpidbestplane_pandora;   //!
   TBranch        *b_trkhasPFParticle_pandora;   //!
   TBranch        *b_trkPFParticleID_pandora;   //!
   TBranch        *b_ntracks_pandoraKalmanTrack;   //!
   TBranch        *b_trkId_pandoraKalmanTrack;   //!
   TBranch        *b_trkncosmictags_tagger_pandoraKalmanTrack;   //!
   TBranch        *b_trkcosmicscore_tagger_pandoraKalmanTrack;   //!
   TBranch        *b_trkcosmictype_tagger_pandoraKalmanTrack;   //!
   TBranch        *b_trkncosmictags_containmenttagger_pandoraKalmanTrack;   //!
   TBranch        *b_trkcosmicscore_containmenttagger_pandoraKalmanTrack;   //!
   TBranch        *b_trkcosmictype_containmenttagger_pandoraKalmanTrack;   //!
   TBranch        *b_trkncosmictags_flashmatch_pandoraKalmanTrack;   //!
   TBranch        *b_trkcosmicscore_flashmatch_pandoraKalmanTrack;   //!
   TBranch        *b_trkcosmictype_flashmatch_pandoraKalmanTrack;   //!
   TBranch        *b_trkke_pandoraKalmanTrack;   //!
   TBranch        *b_trkrange_pandoraKalmanTrack;   //!
   TBranch        *b_trkidtruth_pandoraKalmanTrack;   //!
   TBranch        *b_trkorigin_pandoraKalmanTrack;   //!
   TBranch        *b_trkpdgtruth_pandoraKalmanTrack;   //!
   TBranch        *b_trkefftruth_pandoraKalmanTrack;   //!
   TBranch        *b_trkpurtruth_pandoraKalmanTrack;   //!
   TBranch        *b_trkpitchc_pandoraKalmanTrack;   //!
   TBranch        *b_ntrkhits_pandoraKalmanTrack;   //!
   TBranch        *b_trkdedx_pandoraKalmanTrack;   //!
   TBranch        *b_trkdqdx_pandoraKalmanTrack;   //!
   TBranch        *b_trkresrg_pandoraKalmanTrack;   //!
   TBranch        *b_trkxyz_pandoraKalmanTrack;   //!
   TBranch        *b_trkstartx_pandoraKalmanTrack;   //!
   TBranch        *b_trkstarty_pandoraKalmanTrack;   //!
   TBranch        *b_trkstartz_pandoraKalmanTrack;   //!
   TBranch        *b_trkstartd_pandoraKalmanTrack;   //!
   TBranch        *b_trkendx_pandoraKalmanTrack;   //!
   TBranch        *b_trkendy_pandoraKalmanTrack;   //!
   TBranch        *b_trkendz_pandoraKalmanTrack;   //!
   TBranch        *b_trkendd_pandoraKalmanTrack;   //!
   TBranch        *b_trkACpierceT0_pandoraKalmanTrack;   //!
   TBranch        *b_trkflashT0_pandoraKalmanTrack;   //!
   TBranch        *b_trktrueT0_pandoraKalmanTrack;   //!
   TBranch        *b_trkg4id_pandoraKalmanTrack;   //!
   TBranch        *b_trkorig_pandoraKalmanTrack;   //!
   TBranch        *b_trkpurity_pandoraKalmanTrack;   //!
   TBranch        *b_trkcompleteness_pandoraKalmanTrack;   //!
   TBranch        *b_trktheta_pandoraKalmanTrack;   //!
   TBranch        *b_trkphi_pandoraKalmanTrack;   //!
   TBranch        *b_trkstartdcosx_pandoraKalmanTrack;   //!
   TBranch        *b_trkstartdcosy_pandoraKalmanTrack;   //!
   TBranch        *b_trkstartdcosz_pandoraKalmanTrack;   //!
   TBranch        *b_trkenddcosx_pandoraKalmanTrack;   //!
   TBranch        *b_trkenddcosy_pandoraKalmanTrack;   //!
   TBranch        *b_trkenddcosz_pandoraKalmanTrack;   //!
   TBranch        *b_trkthetaxz_pandoraKalmanTrack;   //!
   TBranch        *b_trkthetayz_pandoraKalmanTrack;   //!
   TBranch        *b_trkmom_pandoraKalmanTrack;   //!
   TBranch        *b_trkmomrange_pandoraKalmanTrack;   //!
   TBranch        *b_trkmommschi2_pandoraKalmanTrack;   //!
   TBranch        *b_trkmommsllhd_pandoraKalmanTrack;   //!
   TBranch        *b_trkmcsfwdmom_pandoraKalmanTrack;   //!
   TBranch        *b_trkmcsfwdll_pandoraKalmanTrack;   //!
   TBranch        *b_trkmcsfwderr_pandoraKalmanTrack;   //!
   TBranch        *b_trkmcsbwdmom_pandoraKalmanTrack;   //!
   TBranch        *b_trkmcsbwdll_pandoraKalmanTrack;   //!
   TBranch        *b_trkmcsbwderr_pandoraKalmanTrack;   //!
   TBranch        *b_trklen_pandoraKalmanTrack;   //!
   TBranch        *b_trksvtxid_pandoraKalmanTrack;   //!
   TBranch        *b_trkevtxid_pandoraKalmanTrack;   //!
   TBranch        *b_trkntraj_pandoraKalmanTrack;   //!
   TBranch        *b_trkpidpdg_pandoraKalmanTrack;   //!
   TBranch        *b_trkpidchi_pandoraKalmanTrack;   //!
   TBranch        *b_trkpidchipr_pandoraKalmanTrack;   //!
   TBranch        *b_trkpidchika_pandoraKalmanTrack;   //!
   TBranch        *b_trkpidchipi_pandoraKalmanTrack;   //!
   TBranch        *b_trkpidchimu_pandoraKalmanTrack;   //!
   TBranch        *b_trkpidpida_pandoraKalmanTrack;   //!
   TBranch        *b_trkpidbestplane_pandoraKalmanTrack;   //!
   TBranch        *b_trkhasPFParticle_pandoraKalmanTrack;   //!
   TBranch        *b_trkPFParticleID_pandoraKalmanTrack;   //!
   TBranch        *b_ntracks_pmtrack;   //!
   TBranch        *b_trkId_pmtrack;   //!
   TBranch        *b_trkncosmictags_tagger_pmtrack;   //!
   TBranch        *b_trkcosmicscore_tagger_pmtrack;   //!
   TBranch        *b_trkcosmictype_tagger_pmtrack;   //!
   TBranch        *b_trkncosmictags_containmenttagger_pmtrack;   //!
   TBranch        *b_trkcosmicscore_containmenttagger_pmtrack;   //!
   TBranch        *b_trkcosmictype_containmenttagger_pmtrack;   //!
   TBranch        *b_trkncosmictags_flashmatch_pmtrack;   //!
   TBranch        *b_trkcosmicscore_flashmatch_pmtrack;   //!
   TBranch        *b_trkcosmictype_flashmatch_pmtrack;   //!
   TBranch        *b_trkke_pmtrack;   //!
   TBranch        *b_trkrange_pmtrack;   //!
   TBranch        *b_trkidtruth_pmtrack;   //!
   TBranch        *b_trkorigin_pmtrack;   //!
   TBranch        *b_trkpdgtruth_pmtrack;   //!
   TBranch        *b_trkefftruth_pmtrack;   //!
   TBranch        *b_trkpurtruth_pmtrack;   //!
   TBranch        *b_trkpitchc_pmtrack;   //!
   TBranch        *b_ntrkhits_pmtrack;   //!
   TBranch        *b_trkdedx_pmtrack;   //!
   TBranch        *b_trkdqdx_pmtrack;   //!
   TBranch        *b_trkresrg_pmtrack;   //!
   TBranch        *b_trkxyz_pmtrack;   //!
   TBranch        *b_trkstartx_pmtrack;   //!
   TBranch        *b_trkstarty_pmtrack;   //!
   TBranch        *b_trkstartz_pmtrack;   //!
   TBranch        *b_trkstartd_pmtrack;   //!
   TBranch        *b_trkendx_pmtrack;   //!
   TBranch        *b_trkendy_pmtrack;   //!
   TBranch        *b_trkendz_pmtrack;   //!
   TBranch        *b_trkendd_pmtrack;   //!
   TBranch        *b_trkACpierceT0_pmtrack;   //!
   TBranch        *b_trkflashT0_pmtrack;   //!
   TBranch        *b_trktrueT0_pmtrack;   //!
   TBranch        *b_trkg4id_pmtrack;   //!
   TBranch        *b_trkorig_pmtrack;   //!
   TBranch        *b_trkpurity_pmtrack;   //!
   TBranch        *b_trkcompleteness_pmtrack;   //!
   TBranch        *b_trktheta_pmtrack;   //!
   TBranch        *b_trkphi_pmtrack;   //!
   TBranch        *b_trkstartdcosx_pmtrack;   //!
   TBranch        *b_trkstartdcosy_pmtrack;   //!
   TBranch        *b_trkstartdcosz_pmtrack;   //!
   TBranch        *b_trkenddcosx_pmtrack;   //!
   TBranch        *b_trkenddcosy_pmtrack;   //!
   TBranch        *b_trkenddcosz_pmtrack;   //!
   TBranch        *b_trkthetaxz_pmtrack;   //!
   TBranch        *b_trkthetayz_pmtrack;   //!
   TBranch        *b_trkmom_pmtrack;   //!
   TBranch        *b_trkmomrange_pmtrack;   //!
   TBranch        *b_trkmommschi2_pmtrack;   //!
   TBranch        *b_trkmommsllhd_pmtrack;   //!
   TBranch        *b_trkmcsfwdmom_pmtrack;   //!
   TBranch        *b_trkmcsfwdll_pmtrack;   //!
   TBranch        *b_trkmcsfwderr_pmtrack;   //!
   TBranch        *b_trkmcsbwdmom_pmtrack;   //!
   TBranch        *b_trkmcsbwdll_pmtrack;   //!
   TBranch        *b_trkmcsbwderr_pmtrack;   //!
   TBranch        *b_trklen_pmtrack;   //!
   TBranch        *b_trksvtxid_pmtrack;   //!
   TBranch        *b_trkevtxid_pmtrack;   //!
   TBranch        *b_trkntraj_pmtrack;   //!
   TBranch        *b_trkpidpdg_pmtrack;   //!
   TBranch        *b_trkpidchi_pmtrack;   //!
   TBranch        *b_trkpidchipr_pmtrack;   //!
   TBranch        *b_trkpidchika_pmtrack;   //!
   TBranch        *b_trkpidchipi_pmtrack;   //!
   TBranch        *b_trkpidchimu_pmtrack;   //!
   TBranch        *b_trkpidpida_pmtrack;   //!
   TBranch        *b_trkpidbestplane_pmtrack;   //!
   TBranch        *b_trkhasPFParticle_pmtrack;   //!
   TBranch        *b_trkPFParticleID_pmtrack;   //!
   TBranch        *b_ntracks_pandoraKalmanShower;   //!
   TBranch        *b_trkId_pandoraKalmanShower;   //!
   TBranch        *b_trkncosmictags_tagger_pandoraKalmanShower;   //!
   TBranch        *b_trkcosmicscore_tagger_pandoraKalmanShower;   //!
   TBranch        *b_trkcosmictype_tagger_pandoraKalmanShower;   //!
   TBranch        *b_trkncosmictags_containmenttagger_pandoraKalmanShower;   //!
   TBranch        *b_trkcosmicscore_containmenttagger_pandoraKalmanShower;   //!
   TBranch        *b_trkcosmictype_containmenttagger_pandoraKalmanShower;   //!
   TBranch        *b_trkncosmictags_flashmatch_pandoraKalmanShower;   //!
   TBranch        *b_trkcosmicscore_flashmatch_pandoraKalmanShower;   //!
   TBranch        *b_trkcosmictype_flashmatch_pandoraKalmanShower;   //!
   TBranch        *b_trkke_pandoraKalmanShower;   //!
   TBranch        *b_trkrange_pandoraKalmanShower;   //!
   TBranch        *b_trkidtruth_pandoraKalmanShower;   //!
   TBranch        *b_trkorigin_pandoraKalmanShower;   //!
   TBranch        *b_trkpdgtruth_pandoraKalmanShower;   //!
   TBranch        *b_trkefftruth_pandoraKalmanShower;   //!
   TBranch        *b_trkpurtruth_pandoraKalmanShower;   //!
   TBranch        *b_trkpitchc_pandoraKalmanShower;   //!
   TBranch        *b_ntrkhits_pandoraKalmanShower;   //!
   TBranch        *b_trkdedx_pandoraKalmanShower;   //!
   TBranch        *b_trkdqdx_pandoraKalmanShower;   //!
   TBranch        *b_trkresrg_pandoraKalmanShower;   //!
   TBranch        *b_trkxyz_pandoraKalmanShower;   //!
   TBranch        *b_trkstartx_pandoraKalmanShower;   //!
   TBranch        *b_trkstarty_pandoraKalmanShower;   //!
   TBranch        *b_trkstartz_pandoraKalmanShower;   //!
   TBranch        *b_trkstartd_pandoraKalmanShower;   //!
   TBranch        *b_trkendx_pandoraKalmanShower;   //!
   TBranch        *b_trkendy_pandoraKalmanShower;   //!
   TBranch        *b_trkendz_pandoraKalmanShower;   //!
   TBranch        *b_trkendd_pandoraKalmanShower;   //!
   TBranch        *b_trkACpierceT0_pandoraKalmanShower;   //!
   TBranch        *b_trkflashT0_pandoraKalmanShower;   //!
   TBranch        *b_trktrueT0_pandoraKalmanShower;   //!
   TBranch        *b_trkg4id_pandoraKalmanShower;   //!
   TBranch        *b_trkorig_pandoraKalmanShower;   //!
   TBranch        *b_trkpurity_pandoraKalmanShower;   //!
   TBranch        *b_trkcompleteness_pandoraKalmanShower;   //!
   TBranch        *b_trktheta_pandoraKalmanShower;   //!
   TBranch        *b_trkphi_pandoraKalmanShower;   //!
   TBranch        *b_trkstartdcosx_pandoraKalmanShower;   //!
   TBranch        *b_trkstartdcosy_pandoraKalmanShower;   //!
   TBranch        *b_trkstartdcosz_pandoraKalmanShower;   //!
   TBranch        *b_trkenddcosx_pandoraKalmanShower;   //!
   TBranch        *b_trkenddcosy_pandoraKalmanShower;   //!
   TBranch        *b_trkenddcosz_pandoraKalmanShower;   //!
   TBranch        *b_trkthetaxz_pandoraKalmanShower;   //!
   TBranch        *b_trkthetayz_pandoraKalmanShower;   //!
   TBranch        *b_trkmom_pandoraKalmanShower;   //!
   TBranch        *b_trkmomrange_pandoraKalmanShower;   //!
   TBranch        *b_trkmommschi2_pandoraKalmanShower;   //!
   TBranch        *b_trkmommsllhd_pandoraKalmanShower;   //!
   TBranch        *b_trkmcsfwdmom_pandoraKalmanShower;   //!
   TBranch        *b_trkmcsfwdll_pandoraKalmanShower;   //!
   TBranch        *b_trkmcsfwderr_pandoraKalmanShower;   //!
   TBranch        *b_trkmcsbwdmom_pandoraKalmanShower;   //!
   TBranch        *b_trkmcsbwdll_pandoraKalmanShower;   //!
   TBranch        *b_trkmcsbwderr_pandoraKalmanShower;   //!
   TBranch        *b_trklen_pandoraKalmanShower;   //!
   TBranch        *b_trksvtxid_pandoraKalmanShower;   //!
   TBranch        *b_trkevtxid_pandoraKalmanShower;   //!
   TBranch        *b_trkntraj_pandoraKalmanShower;   //!
   TBranch        *b_trkpidpdg_pandoraKalmanShower;   //!
   TBranch        *b_trkpidchi_pandoraKalmanShower;   //!
   TBranch        *b_trkpidchipr_pandoraKalmanShower;   //!
   TBranch        *b_trkpidchika_pandoraKalmanShower;   //!
   TBranch        *b_trkpidchipi_pandoraKalmanShower;   //!
   TBranch        *b_trkpidchimu_pandoraKalmanShower;   //!
   TBranch        *b_trkpidpida_pandoraKalmanShower;   //!
   TBranch        *b_trkpidbestplane_pandoraKalmanShower;   //!
   TBranch        *b_trkhasPFParticle_pandoraKalmanShower;   //!
   TBranch        *b_trkPFParticleID_pandoraKalmanShower;   //!
   TBranch        *b_nvtx_pandora;   //!
   TBranch        *b_vtxId_pandora;   //!
   TBranch        *b_vtxx_pandora;   //!
   TBranch        *b_vtxy_pandora;   //!
   TBranch        *b_vtxz_pandora;   //!
   TBranch        *b_vtxhasPFParticle_pandora;   //!
   TBranch        *b_vtxPFParticleID_pandora;   //!
   TBranch        *b_nvtx_pmtrack;   //!
   TBranch        *b_vtxId_pmtrack;   //!
   TBranch        *b_vtxx_pmtrack;   //!
   TBranch        *b_vtxy_pmtrack;   //!
   TBranch        *b_vtxz_pmtrack;   //!
   TBranch        *b_vtxhasPFParticle_pmtrack;   //!
   TBranch        *b_vtxPFParticleID_pmtrack;   //!
   TBranch        *b_nvtx_trajcluster;   //!
   TBranch        *b_vtxId_trajcluster;   //!
   TBranch        *b_vtxx_trajcluster;   //!
   TBranch        *b_vtxy_trajcluster;   //!
   TBranch        *b_vtxz_trajcluster;   //!
   TBranch        *b_vtxhasPFParticle_trajcluster;   //!
   TBranch        *b_vtxPFParticleID_trajcluster;   //!
   TBranch        *b_nnuvtx_pandora;   //!
   TBranch        *b_nuvtxId_pandora;   //!
   TBranch        *b_nuvtxx_pandora;   //!
   TBranch        *b_nuvtxy_pandora;   //!
   TBranch        *b_nuvtxz_pandora;   //!
   TBranch        *b_nuvtxpdg_pandora;   //!
   TBranch        *b_nuvtxhasPFParticle_pandora;   //!
   TBranch        *b_nuvtxPFParticleID_pandora;   //!
   TBranch        *b_nfls_simpleFlashBeam;   //!
   TBranch        *b_flsTime_simpleFlashBeam;   //!
   TBranch        *b_flsPe_simpleFlashBeam;   //!
   TBranch        *b_flsPePerOpDet_simpleFlashBeam;   //!
   TBranch        *b_flsXcenter_simpleFlashBeam;   //!
   TBranch        *b_flsYcenter_simpleFlashBeam;   //!
   TBranch        *b_flsZcenter_simpleFlashBeam;   //!
   TBranch        *b_flsYwidth_simpleFlashBeam;   //!
   TBranch        *b_flsZwidth_simpleFlashBeam;   //!
   TBranch        *b_flsTwidth_simpleFlashBeam;   //!
   TBranch        *b_nfls_simpleFlashCosmic;   //!
   TBranch        *b_flsTime_simpleFlashCosmic;   //!
   TBranch        *b_flsPe_simpleFlashCosmic;   //!
   TBranch        *b_flsPePerOpDet_simpleFlashCosmic;   //!
   TBranch        *b_flsXcenter_simpleFlashCosmic;   //!
   TBranch        *b_flsYcenter_simpleFlashCosmic;   //!
   TBranch        *b_flsZcenter_simpleFlashCosmic;   //!
   TBranch        *b_flsYwidth_simpleFlashCosmic;   //!
   TBranch        *b_flsZwidth_simpleFlashCosmic;   //!
   TBranch        *b_flsTwidth_simpleFlashCosmic;   //!
   TBranch        *b_nfls_simpleFlashBeamLowPE;   //!
   TBranch        *b_flsTime_simpleFlashBeamLowPE;   //!
   TBranch        *b_flsPe_simpleFlashBeamLowPE;   //!
   TBranch        *b_flsPePerOpDet_simpleFlashBeamLowPE;   //!
   TBranch        *b_flsXcenter_simpleFlashBeamLowPE;   //!
   TBranch        *b_flsYcenter_simpleFlashBeamLowPE;   //!
   TBranch        *b_flsZcenter_simpleFlashBeamLowPE;   //!
   TBranch        *b_flsYwidth_simpleFlashBeamLowPE;   //!
   TBranch        *b_flsZwidth_simpleFlashBeamLowPE;   //!
   TBranch        *b_flsTwidth_simpleFlashBeamLowPE;   //!

   NewAnalysis(TTree *tree=0);
   virtual ~NewAnalysis();
   virtual Int_t    Cut(Long64_t entry);
   virtual Int_t    GetEntry(Long64_t entry);
   virtual Long64_t LoadTree(Long64_t entry);
   virtual void     Init(TTree *tree);
   virtual void     Loop();
   virtual Bool_t   Notify();
   virtual void     Show(Long64_t entry = -1);
};

#endif

#ifdef NewAnalysis_cxx
NewAnalysis::NewAnalysis(TTree *tree) : fChain(0) 
{
// if parameter tree is not specified (or zero), connect the file
// used to generate this class and read the Tree.
   if (tree == 0) {
      TFile *f = (TFile*)gROOT->GetListOfFiles()->FindObject("../ana_hist_ALL_BKGD.root");
      if (!f || !f->IsOpen()) {
         f = new TFile("../ana_hist_ALL_BKGD.root");
      }
      TDirectory * dir = (TDirectory*)f->Get("../ana_hist_ALL_BKGD.root:/analysistree");
      dir->GetObject("anatree",tree);

   }
   Init(tree);
}

NewAnalysis::~NewAnalysis()
{
   if (!fChain) return;
   delete fChain->GetCurrentFile();
}

Int_t NewAnalysis::GetEntry(Long64_t entry)
{
// Read contents of entry.
   if (!fChain) return 0;
   return fChain->GetEntry(entry);
}
Long64_t NewAnalysis::LoadTree(Long64_t entry)
{
// Set the environment to read one entry
   if (!fChain) return -5;
   Long64_t centry = fChain->LoadTree(entry);
   if (centry < 0) return centry;
   if (fChain->GetTreeNumber() != fCurrent) {
      fCurrent = fChain->GetTreeNumber();
      Notify();
   }
   return centry;
}

void NewAnalysis::Init(TTree *tree)
{
   // The Init() function is called when the selector needs to initialize
   // a new tree or chain. Typically here the branch addresses and branch
   // pointers of the tree will be set.
   // It is normally not necessary to make changes to the generated
   // code, but the routine can be extended by the user if needed.
   // Init() will be called many times when running on PROOF
   // (once per file to be processed).

   // Set object pointer
   evtwgt_funcname = 0;
   evtwgt_weight = 0;
   evtwgt_nweight = 0;
   swtrigger_name = 0;
   swtrigger_triggered = 0;
   processname = 0;
   mcshwr_Process = 0;
   mcshwr_MotherProcess = 0;
   mcshwr_AncesotorProcess = 0;
   mctrk_Process = 0;
   mctrk_MotherProcess = 0;
   mctrk_AncesotorProcess = 0;
   // Set branch addresses and branch pointers
   if (!tree) return;
   fChain = tree;
   fCurrent = -1;
   fChain->SetMakeClass(1);

   fChain->SetBranchAddress("run", &run, &b_run);
   fChain->SetBranchAddress("subrun", &subrun, &b_subrun);
   fChain->SetBranchAddress("event", &event, &b_event);
   fChain->SetBranchAddress("evttime", &evttime, &b_evttime);
   fChain->SetBranchAddress("beamtime", &beamtime, &b_beamtime);
   fChain->SetBranchAddress("pot", &pot, &b_pot);
   fChain->SetBranchAddress("isdata", &isdata, &b_isdata);
   fChain->SetBranchAddress("taulife", &taulife, &b_taulife);
   fChain->SetBranchAddress("triggernumber", &triggernumber, &b_triggernumber);
   fChain->SetBranchAddress("triggertime", &triggertime, &b_triggertime);
   fChain->SetBranchAddress("beamgatetime", &beamgatetime, &b_beamgatetime);
   fChain->SetBranchAddress("triggerbits", &triggerbits, &b_triggerbits);
   fChain->SetBranchAddress("potbnb", &potbnb, &b_potbnb);
   fChain->SetBranchAddress("potnumitgt", &potnumitgt, &b_potnumitgt);
   fChain->SetBranchAddress("potnumi101", &potnumi101, &b_potnumi101);
   fChain->SetBranchAddress("evtwgt_funcname", &evtwgt_funcname, &b_evtwgt_funcname);
   fChain->SetBranchAddress("evtwgt_weight", &evtwgt_weight, &b_evtwgt_weight);
   fChain->SetBranchAddress("evtwgt_nweight", &evtwgt_nweight, &b_evtwgt_nweight);
   fChain->SetBranchAddress("evtwgt_nfunc", &evtwgt_nfunc, &b_evtwgt_nfunc);
   fChain->SetBranchAddress("opfilter_pebeam", &opfilter_pebeam, &b_opfilter_pebeam);
   fChain->SetBranchAddress("opfilter_peveto", &opfilter_peveto, &b_opfilter_peveto);
   fChain->SetBranchAddress("opfilter_pmtmaxfrac", &opfilter_pmtmaxfrac, &b_opfilter_pmtmaxfrac);
   fChain->SetBranchAddress("swtrigger_name", &swtrigger_name, &b_swtrigger_name);
   fChain->SetBranchAddress("swtrigger_triggered", &swtrigger_triggered, &b_swtrigger_triggered);
   fChain->SetBranchAddress("no_hits", &no_hits, &b_no_hits);
   fChain->SetBranchAddress("no_hits_stored", &no_hits_stored, &b_no_hits_stored);
   fChain->SetBranchAddress("hit_plane", hit_plane, &b_hit_plane);
   fChain->SetBranchAddress("hit_wire", hit_wire, &b_hit_wire);
   fChain->SetBranchAddress("hit_channel", hit_channel, &b_hit_channel);
   fChain->SetBranchAddress("hit_peakT", hit_peakT, &b_hit_peakT);
   fChain->SetBranchAddress("hit_charge", hit_charge, &b_hit_charge);
   fChain->SetBranchAddress("hit_ph", hit_ph, &b_hit_ph);
   fChain->SetBranchAddress("hit_startT", hit_startT, &b_hit_startT);
   fChain->SetBranchAddress("hit_endT", hit_endT, &b_hit_endT);
   fChain->SetBranchAddress("hit_rms", hit_rms, &b_hit_rms);
   fChain->SetBranchAddress("hit_trueX", hit_trueX, &b_hit_trueX);
   fChain->SetBranchAddress("hit_goodnessOfFit", hit_goodnessOfFit, &b_hit_goodnessOfFit);
   fChain->SetBranchAddress("hit_multiplicity", hit_multiplicity, &b_hit_multiplicity);
   fChain->SetBranchAddress("hit_trkid", hit_trkid, &b_hit_trkid);
   fChain->SetBranchAddress("hit_trkKey", hit_trkKey, &b_hit_trkKey);
   fChain->SetBranchAddress("hit_clusterid", hit_clusterid, &b_hit_clusterid);
   fChain->SetBranchAddress("hit_clusterKey", hit_clusterKey, &b_hit_clusterKey);
   fChain->SetBranchAddress("hit_nelec", hit_nelec, &b_hit_nelec);
   fChain->SetBranchAddress("hit_energy", hit_energy, &b_hit_energy);
   fChain->SetBranchAddress("nclusters", &nclusters, &b_nclusters);
   fChain->SetBranchAddress("clusterId", &clusterId, &b_clusterId);
   fChain->SetBranchAddress("clusterView", &clusterView, &b_clusterView);
   fChain->SetBranchAddress("cluster_StartCharge", &cluster_StartCharge, &b_cluster_StartCharge);
   fChain->SetBranchAddress("cluster_StartAngle", &cluster_StartAngle, &b_cluster_StartAngle);
   fChain->SetBranchAddress("cluster_EndCharge", &cluster_EndCharge, &b_cluster_EndCharge);
   fChain->SetBranchAddress("cluster_EndAngle", &cluster_EndAngle, &b_cluster_EndAngle);
   fChain->SetBranchAddress("cluster_Integral", &cluster_Integral, &b_cluster_Integral);
   fChain->SetBranchAddress("cluster_IntegralAverage", &cluster_IntegralAverage, &b_cluster_IntegralAverage);
   fChain->SetBranchAddress("cluster_SummedADC", &cluster_SummedADC, &b_cluster_SummedADC);
   fChain->SetBranchAddress("cluster_SummedADCaverage", &cluster_SummedADCaverage, &b_cluster_SummedADCaverage);
   fChain->SetBranchAddress("cluster_MultipleHitDensity", &cluster_MultipleHitDensity, &b_cluster_MultipleHitDensity);
   fChain->SetBranchAddress("cluster_Width", &cluster_Width, &b_cluster_Width);
   fChain->SetBranchAddress("cluster_NHits", &cluster_NHits, &b_cluster_NHits);
   fChain->SetBranchAddress("cluster_StartWire", &cluster_StartWire, &b_cluster_StartWire);
   fChain->SetBranchAddress("cluster_StartTick", &cluster_StartTick, &b_cluster_StartTick);
   fChain->SetBranchAddress("cluster_EndWire", &cluster_EndWire, &b_cluster_EndWire);
   fChain->SetBranchAddress("cluster_EndTick", &cluster_EndTick, &b_cluster_EndTick);
   fChain->SetBranchAddress("cluncosmictags_tagger", &cluncosmictags_tagger, &b_cluncosmictags_tagger);
   fChain->SetBranchAddress("clucosmicscore_tagger", &clucosmicscore_tagger, &b_clucosmicscore_tagger);
   fChain->SetBranchAddress("clucosmictype_tagger", &clucosmictype_tagger, &b_clucosmictype_tagger);
   fChain->SetBranchAddress("kNFlashAlgos", &kNFlashAlgos, &b_kNFlashAlgos);
   fChain->SetBranchAddress("kNTracker", &kNTracker, &b_kNTracker);
   fChain->SetBranchAddress("kNVertexAlgos", &kNVertexAlgos, &b_kNVertexAlgos);
   fChain->SetBranchAddress("kNNeutrinoVertexAlgos", &kNNeutrinoVertexAlgos, &b_kNNeutrinoVertexAlgos);
   fChain->SetBranchAddress("kNShowerAlgos", &kNShowerAlgos, &b_kNShowerAlgos);
   fChain->SetBranchAddress("mcevts_truth", &mcevts_truth, &b_mcevts_truth);
   fChain->SetBranchAddress("nuPDG_truth", nuPDG_truth, &b_nuPDG_truth);
   fChain->SetBranchAddress("ccnc_truth", ccnc_truth, &b_ccnc_truth);
   fChain->SetBranchAddress("mode_truth", mode_truth, &b_mode_truth);
   fChain->SetBranchAddress("enu_truth", enu_truth, &b_enu_truth);
   fChain->SetBranchAddress("Q2_truth", Q2_truth, &b_Q2_truth);
   fChain->SetBranchAddress("W_truth", W_truth, &b_W_truth);
   fChain->SetBranchAddress("X_truth", X_truth, &b_X_truth);
   fChain->SetBranchAddress("Y_truth", Y_truth, &b_Y_truth);
   fChain->SetBranchAddress("hitnuc_truth", hitnuc_truth, &b_hitnuc_truth);
   fChain->SetBranchAddress("nuvtxx_truth", nuvtxx_truth, &b_nuvtxx_truth);
   fChain->SetBranchAddress("nuvtxy_truth", nuvtxy_truth, &b_nuvtxy_truth);
   fChain->SetBranchAddress("nuvtxz_truth", nuvtxz_truth, &b_nuvtxz_truth);
   fChain->SetBranchAddress("sp_charge_corrected_nuvtxx_truth", sp_charge_corrected_nuvtxx_truth, &b_sp_charge_corrected_nuvtxx_truth);
   fChain->SetBranchAddress("sp_charge_corrected_nuvtxy_truth", sp_charge_corrected_nuvtxy_truth, &b_sp_charge_corrected_nuvtxy_truth);
   fChain->SetBranchAddress("sp_charge_corrected_nuvtxz_truth", sp_charge_corrected_nuvtxz_truth, &b_sp_charge_corrected_nuvtxz_truth);
   fChain->SetBranchAddress("nu_dcosx_truth", nu_dcosx_truth, &b_nu_dcosx_truth);
   fChain->SetBranchAddress("nu_dcosy_truth", nu_dcosy_truth, &b_nu_dcosy_truth);
   fChain->SetBranchAddress("nu_dcosz_truth", nu_dcosz_truth, &b_nu_dcosz_truth);
   fChain->SetBranchAddress("lep_mom_truth", lep_mom_truth, &b_lep_mom_truth);
   fChain->SetBranchAddress("lep_dcosx_truth", lep_dcosx_truth, &b_lep_dcosx_truth);
   fChain->SetBranchAddress("lep_dcosy_truth", lep_dcosy_truth, &b_lep_dcosy_truth);
   fChain->SetBranchAddress("lep_dcosz_truth", lep_dcosz_truth, &b_lep_dcosz_truth);
   fChain->SetBranchAddress("vx_flux", vx_flux, &b_vx_flux);
   fChain->SetBranchAddress("vy_flux", vy_flux, &b_vy_flux);
   fChain->SetBranchAddress("vz_flux", vz_flux, &b_vz_flux);
   fChain->SetBranchAddress("pdpx_flux", pdpx_flux, &b_pdpx_flux);
   fChain->SetBranchAddress("pdpy_flux", pdpy_flux, &b_pdpy_flux);
   fChain->SetBranchAddress("pdpz_flux", pdpz_flux, &b_pdpz_flux);
   fChain->SetBranchAddress("ppdxdz_flux", ppdxdz_flux, &b_ppdxdz_flux);
   fChain->SetBranchAddress("ppdydz_flux", ppdydz_flux, &b_ppdydz_flux);
   fChain->SetBranchAddress("pppz_flux", pppz_flux, &b_pppz_flux);
   fChain->SetBranchAddress("ptype_flux", ptype_flux, &b_ptype_flux);
   fChain->SetBranchAddress("ppvx_flux", ppvx_flux, &b_ppvx_flux);
   fChain->SetBranchAddress("ppvy_flux", ppvy_flux, &b_ppvy_flux);
   fChain->SetBranchAddress("ppvz_flux", ppvz_flux, &b_ppvz_flux);
   fChain->SetBranchAddress("muparpx_flux", muparpx_flux, &b_muparpx_flux);
   fChain->SetBranchAddress("muparpy_flux", muparpy_flux, &b_muparpy_flux);
   fChain->SetBranchAddress("muparpz_flux", muparpz_flux, &b_muparpz_flux);
   fChain->SetBranchAddress("mupare_flux", mupare_flux, &b_mupare_flux);
   fChain->SetBranchAddress("tgen_flux", tgen_flux, &b_tgen_flux);
   fChain->SetBranchAddress("tgptype_flux", tgptype_flux, &b_tgptype_flux);
   fChain->SetBranchAddress("tgppx_flux", tgppx_flux, &b_tgppx_flux);
   fChain->SetBranchAddress("tgppy_flux", tgppy_flux, &b_tgppy_flux);
   fChain->SetBranchAddress("tgppz_flux", tgppz_flux, &b_tgppz_flux);
   fChain->SetBranchAddress("tprivx_flux", tprivx_flux, &b_tprivx_flux);
   fChain->SetBranchAddress("tprivy_flux", tprivy_flux, &b_tprivy_flux);
   fChain->SetBranchAddress("tprivz_flux", tprivz_flux, &b_tprivz_flux);
   fChain->SetBranchAddress("dk2gen_flux", dk2gen_flux, &b_dk2gen_flux);
   fChain->SetBranchAddress("gen2vtx_flux", gen2vtx_flux, &b_gen2vtx_flux);
   fChain->SetBranchAddress("tpx_flux", tpx_flux, &b_tpx_flux);
   fChain->SetBranchAddress("tpy_flux", tpy_flux, &b_tpy_flux);
   fChain->SetBranchAddress("tpz_flux", tpz_flux, &b_tpz_flux);
   fChain->SetBranchAddress("tptype_flux", tptype_flux, &b_tptype_flux);
   fChain->SetBranchAddress("genie_no_primaries", &genie_no_primaries, &b_genie_no_primaries);
   fChain->SetBranchAddress("genie_primaries_pdg", genie_primaries_pdg, &b_genie_primaries_pdg);
   fChain->SetBranchAddress("genie_Eng", genie_Eng, &b_genie_Eng);
   fChain->SetBranchAddress("genie_Px", genie_Px, &b_genie_Px);
   fChain->SetBranchAddress("genie_Py", genie_Py, &b_genie_Py);
   fChain->SetBranchAddress("genie_Pz", genie_Pz, &b_genie_Pz);
   fChain->SetBranchAddress("genie_P", genie_P, &b_genie_P);
   fChain->SetBranchAddress("genie_status_code", genie_status_code, &b_genie_status_code);
   fChain->SetBranchAddress("genie_mass", genie_mass, &b_genie_mass);
   fChain->SetBranchAddress("genie_trackID", genie_trackID, &b_genie_trackID);
   fChain->SetBranchAddress("genie_ND", genie_ND, &b_genie_ND);
   fChain->SetBranchAddress("genie_mother", genie_mother, &b_genie_mother);
   fChain->SetBranchAddress("no_primaries", &no_primaries, &b_no_primaries);
   fChain->SetBranchAddress("geant_list_size", &geant_list_size, &b_geant_list_size);
   fChain->SetBranchAddress("geant_list_size_in_tpcAV", &geant_list_size_in_tpcAV, &b_geant_list_size_in_tpcAV);
   fChain->SetBranchAddress("pdg", pdg, &b_pdg);
   fChain->SetBranchAddress("status", status, &b_status);
   fChain->SetBranchAddress("Mass", Mass, &b_Mass);
   fChain->SetBranchAddress("Eng", Eng, &b_Eng);
   fChain->SetBranchAddress("EndE", EndE, &b_EndE);
   fChain->SetBranchAddress("Px", Px, &b_Px);
   fChain->SetBranchAddress("Py", Py, &b_Py);
   fChain->SetBranchAddress("Pz", Pz, &b_Pz);
   fChain->SetBranchAddress("P", P, &b_P);
   fChain->SetBranchAddress("StartPointx", StartPointx, &b_StartPointx);
   fChain->SetBranchAddress("StartPointy", StartPointy, &b_StartPointy);
   fChain->SetBranchAddress("StartPointz", StartPointz, &b_StartPointz);
   fChain->SetBranchAddress("sp_charge_corrected_StartPointx", sp_charge_corrected_StartPointx, &b_sp_charge_corrected_StartPointx);
   fChain->SetBranchAddress("sp_charge_corrected_StartPointy", sp_charge_corrected_StartPointy, &b_sp_charge_corrected_StartPointy);
   fChain->SetBranchAddress("sp_charge_corrected_StartPointz", sp_charge_corrected_StartPointz, &b_sp_charge_corrected_StartPointz);
   fChain->SetBranchAddress("StartT", StartT, &b_StartT);
   fChain->SetBranchAddress("EndPointx", EndPointx, &b_EndPointx);
   fChain->SetBranchAddress("EndPointy", EndPointy, &b_EndPointy);
   fChain->SetBranchAddress("EndPointz", EndPointz, &b_EndPointz);
   fChain->SetBranchAddress("sp_charge_corrected_EndPointx", sp_charge_corrected_EndPointx, &b_sp_charge_corrected_EndPointx);
   fChain->SetBranchAddress("sp_charge_corrected_EndPointy", sp_charge_corrected_EndPointy, &b_sp_charge_corrected_EndPointy);
   fChain->SetBranchAddress("sp_charge_corrected_EndPointz", sp_charge_corrected_EndPointz, &b_sp_charge_corrected_EndPointz);
   fChain->SetBranchAddress("EndT", EndT, &b_EndT);
   fChain->SetBranchAddress("theta", theta, &b_theta);
   fChain->SetBranchAddress("phi", phi, &b_phi);
   fChain->SetBranchAddress("theta_xz", theta_xz, &b_theta_xz);
   fChain->SetBranchAddress("theta_yz", theta_yz, &b_theta_yz);
   fChain->SetBranchAddress("pathlen", pathlen, &b_pathlen);
   fChain->SetBranchAddress("inTPCActive", inTPCActive, &b_inTPCActive);
   fChain->SetBranchAddress("StartPointx_tpcAV", StartPointx_tpcAV, &b_StartPointx_tpcAV);
   fChain->SetBranchAddress("StartPointy_tpcAV", StartPointy_tpcAV, &b_StartPointy_tpcAV);
   fChain->SetBranchAddress("StartPointz_tpcAV", StartPointz_tpcAV, &b_StartPointz_tpcAV);
   fChain->SetBranchAddress("sp_charge_corrected_StartPointx_tpcAV", sp_charge_corrected_StartPointx_tpcAV, &b_sp_charge_corrected_StartPointx_tpcAV);
   fChain->SetBranchAddress("sp_charge_corrected_StartPointy_tpcAV", sp_charge_corrected_StartPointy_tpcAV, &b_sp_charge_corrected_StartPointy_tpcAV);
   fChain->SetBranchAddress("sp_charge_corrected_StartPointz_tpcAV", sp_charge_corrected_StartPointz_tpcAV, &b_sp_charge_corrected_StartPointz_tpcAV);
   fChain->SetBranchAddress("StartT_tpcAV", StartT_tpcAV, &b_StartT_tpcAV);
   fChain->SetBranchAddress("StartE_tpcAV", StartE_tpcAV, &b_StartE_tpcAV);
   fChain->SetBranchAddress("StartP_tpcAV", StartP_tpcAV, &b_StartP_tpcAV);
   fChain->SetBranchAddress("StartPx_tpcAV", StartPx_tpcAV, &b_StartPx_tpcAV);
   fChain->SetBranchAddress("StartPy_tpcAV", StartPy_tpcAV, &b_StartPy_tpcAV);
   fChain->SetBranchAddress("StartPz_tpcAV", StartPz_tpcAV, &b_StartPz_tpcAV);
   fChain->SetBranchAddress("EndPointx_tpcAV", EndPointx_tpcAV, &b_EndPointx_tpcAV);
   fChain->SetBranchAddress("EndPointy_tpcAV", EndPointy_tpcAV, &b_EndPointy_tpcAV);
   fChain->SetBranchAddress("EndPointz_tpcAV", EndPointz_tpcAV, &b_EndPointz_tpcAV);
   fChain->SetBranchAddress("sp_charge_corrected_EndPointx_tpcAV", sp_charge_corrected_EndPointx_tpcAV, &b_sp_charge_corrected_EndPointx_tpcAV);
   fChain->SetBranchAddress("sp_charge_corrected_EndPointy_tpcAV", sp_charge_corrected_EndPointy_tpcAV, &b_sp_charge_corrected_EndPointy_tpcAV);
   fChain->SetBranchAddress("sp_charge_corrected_EndPointz_tpcAV", sp_charge_corrected_EndPointz_tpcAV, &b_sp_charge_corrected_EndPointz_tpcAV);
   fChain->SetBranchAddress("EndT_tpcAV", EndT_tpcAV, &b_EndT_tpcAV);
   fChain->SetBranchAddress("EndE_tpcAV", EndE_tpcAV, &b_EndE_tpcAV);
   fChain->SetBranchAddress("EndP_tpcAV", EndP_tpcAV, &b_EndP_tpcAV);
   fChain->SetBranchAddress("EndPx_tpcAV", EndPx_tpcAV, &b_EndPx_tpcAV);
   fChain->SetBranchAddress("EndPy_tpcAV", EndPy_tpcAV, &b_EndPy_tpcAV);
   fChain->SetBranchAddress("EndPz_tpcAV", EndPz_tpcAV, &b_EndPz_tpcAV);
   fChain->SetBranchAddress("pathlen_drifted", pathlen_drifted, &b_pathlen_drifted);
   fChain->SetBranchAddress("inTPCDrifted", inTPCDrifted, &b_inTPCDrifted);
   fChain->SetBranchAddress("StartPointx_drifted", StartPointx_drifted, &b_StartPointx_drifted);
   fChain->SetBranchAddress("StartPointy_drifted", StartPointy_drifted, &b_StartPointy_drifted);
   fChain->SetBranchAddress("StartPointz_drifted", StartPointz_drifted, &b_StartPointz_drifted);
   fChain->SetBranchAddress("sp_charge_corrected_StartPointx_drifted", sp_charge_corrected_StartPointx_drifted, &b_sp_charge_corrected_StartPointx_drifted);
   fChain->SetBranchAddress("sp_charge_corrected_StartPointy_drifted", sp_charge_corrected_StartPointy_drifted, &b_sp_charge_corrected_StartPointy_drifted);
   fChain->SetBranchAddress("sp_charge_corrected_StartPointz_drifted", sp_charge_corrected_StartPointz_drifted, &b_sp_charge_corrected_StartPointz_drifted);
   fChain->SetBranchAddress("StartT_drifted", StartT_drifted, &b_StartT_drifted);
   fChain->SetBranchAddress("StartE_drifted", StartE_drifted, &b_StartE_drifted);
   fChain->SetBranchAddress("StartP_drifted", StartP_drifted, &b_StartP_drifted);
   fChain->SetBranchAddress("StartPx_drifted", StartPx_drifted, &b_StartPx_drifted);
   fChain->SetBranchAddress("StartPy_drifted", StartPy_drifted, &b_StartPy_drifted);
   fChain->SetBranchAddress("StartPz_drifted", StartPz_drifted, &b_StartPz_drifted);
   fChain->SetBranchAddress("EndPointx_drifted", EndPointx_drifted, &b_EndPointx_drifted);
   fChain->SetBranchAddress("EndPointy_drifted", EndPointy_drifted, &b_EndPointy_drifted);
   fChain->SetBranchAddress("EndPointz_drifted", EndPointz_drifted, &b_EndPointz_drifted);
   fChain->SetBranchAddress("sp_charge_corrected_EndPointx_drifted", sp_charge_corrected_EndPointx_drifted, &b_sp_charge_corrected_EndPointx_drifted);
   fChain->SetBranchAddress("sp_charge_corrected_EndPointy_drifted", sp_charge_corrected_EndPointy_drifted, &b_sp_charge_corrected_EndPointy_drifted);
   fChain->SetBranchAddress("sp_charge_corrected_EndPointz_drifted", sp_charge_corrected_EndPointz_drifted, &b_sp_charge_corrected_EndPointz_drifted);
   fChain->SetBranchAddress("EndT_drifted", EndT_drifted, &b_EndT_drifted);
   fChain->SetBranchAddress("EndE_drifted", EndE_drifted, &b_EndE_drifted);
   fChain->SetBranchAddress("EndP_drifted", EndP_drifted, &b_EndP_drifted);
   fChain->SetBranchAddress("EndPx_drifted", EndPx_drifted, &b_EndPx_drifted);
   fChain->SetBranchAddress("EndPy_drifted", EndPy_drifted, &b_EndPy_drifted);
   fChain->SetBranchAddress("EndPz_drifted", EndPz_drifted, &b_EndPz_drifted);
   fChain->SetBranchAddress("NumberDaughters", NumberDaughters, &b_NumberDaughters);
   fChain->SetBranchAddress("Mother", Mother, &b_Mother);
   fChain->SetBranchAddress("TrackId", TrackId, &b_TrackId);
   fChain->SetBranchAddress("MergedId", MergedId, &b_MergedId);
   fChain->SetBranchAddress("origin", origin, &b_origin);
   fChain->SetBranchAddress("MCTruthIndex", MCTruthIndex, &b_MCTruthIndex);
   fChain->SetBranchAddress("process_primary", process_primary, &b_process_primary);
   fChain->SetBranchAddress("processname", &processname, &b_processname);
   fChain->SetBranchAddress("NTrTrajPts", NTrTrajPts, &b_NTrTrajPts);
   fChain->SetBranchAddress("TrueTraj_X", TrueTraj_X, &b_TrueTraj_X);
   fChain->SetBranchAddress("TrueTraj_Y", TrueTraj_Y, &b_TrueTraj_Y);
   fChain->SetBranchAddress("TrueTraj_Z", TrueTraj_Z, &b_TrueTraj_Z);
   fChain->SetBranchAddress("TrueTraj_E", TrueTraj_E, &b_TrueTraj_E);
   fChain->SetBranchAddress("no_mcshowers", &no_mcshowers, &b_no_mcshowers);
   fChain->SetBranchAddress("mcshwr_origin", mcshwr_origin, &b_mcshwr_origin);
   fChain->SetBranchAddress("mcshwr_pdg", mcshwr_pdg, &b_mcshwr_pdg);
   fChain->SetBranchAddress("mcshwr_TrackId", mcshwr_TrackId, &b_mcshwr_TrackId);
   fChain->SetBranchAddress("mcshwr_Process", &mcshwr_Process, &b_mcshwr_Process);
   fChain->SetBranchAddress("mcshwr_startX", mcshwr_startX, &b_mcshwr_startX);
   fChain->SetBranchAddress("mcshwr_startY", mcshwr_startY, &b_mcshwr_startY);
   fChain->SetBranchAddress("mcshwr_startZ", mcshwr_startZ, &b_mcshwr_startZ);
   fChain->SetBranchAddress("mcshwr_endX", mcshwr_endX, &b_mcshwr_endX);
   fChain->SetBranchAddress("mcshwr_endY", mcshwr_endY, &b_mcshwr_endY);
   fChain->SetBranchAddress("mcshwr_endZ", mcshwr_endZ, &b_mcshwr_endZ);
   fChain->SetBranchAddress("mcshwr_CombEngX", mcshwr_CombEngX, &b_mcshwr_CombEngX);
   fChain->SetBranchAddress("mcshwr_CombEngY", mcshwr_CombEngY, &b_mcshwr_CombEngY);
   fChain->SetBranchAddress("mcshwr_CombEngZ", mcshwr_CombEngZ, &b_mcshwr_CombEngZ);
   fChain->SetBranchAddress("mcshwr_CombEngPx", mcshwr_CombEngPx, &b_mcshwr_CombEngPx);
   fChain->SetBranchAddress("mcshwr_CombEngPy", mcshwr_CombEngPy, &b_mcshwr_CombEngPy);
   fChain->SetBranchAddress("mcshwr_CombEngPz", mcshwr_CombEngPz, &b_mcshwr_CombEngPz);
   fChain->SetBranchAddress("mcshwr_CombEngE", mcshwr_CombEngE, &b_mcshwr_CombEngE);
   fChain->SetBranchAddress("mcshwr_dEdx", mcshwr_dEdx, &b_mcshwr_dEdx);
   fChain->SetBranchAddress("mcshwr_StartDirX", mcshwr_StartDirX, &b_mcshwr_StartDirX);
   fChain->SetBranchAddress("mcshwr_StartDirY", mcshwr_StartDirY, &b_mcshwr_StartDirY);
   fChain->SetBranchAddress("mcshwr_StartDirZ", mcshwr_StartDirZ, &b_mcshwr_StartDirZ);
   fChain->SetBranchAddress("mcshwr_isEngDeposited", mcshwr_isEngDeposited, &b_mcshwr_isEngDeposited);
   fChain->SetBranchAddress("mcshwr_Motherpdg", mcshwr_Motherpdg, &b_mcshwr_Motherpdg);
   fChain->SetBranchAddress("mcshwr_MotherTrkId", mcshwr_MotherTrkId, &b_mcshwr_MotherTrkId);
   fChain->SetBranchAddress("mcshwr_MotherProcess", &mcshwr_MotherProcess, &b_mcshwr_MotherProcess);
   fChain->SetBranchAddress("mcshwr_MotherstartX", mcshwr_MotherstartX, &b_mcshwr_MotherstartX);
   fChain->SetBranchAddress("mcshwr_MotherstartY", mcshwr_MotherstartY, &b_mcshwr_MotherstartY);
   fChain->SetBranchAddress("mcshwr_MotherstartZ", mcshwr_MotherstartZ, &b_mcshwr_MotherstartZ);
   fChain->SetBranchAddress("mcshwr_MotherendX", mcshwr_MotherendX, &b_mcshwr_MotherendX);
   fChain->SetBranchAddress("mcshwr_MotherendY", mcshwr_MotherendY, &b_mcshwr_MotherendY);
   fChain->SetBranchAddress("mcshwr_MotherendZ", mcshwr_MotherendZ, &b_mcshwr_MotherendZ);
   fChain->SetBranchAddress("mcshwr_Ancestorpdg", mcshwr_Ancestorpdg, &b_mcshwr_Ancestorpdg);
   fChain->SetBranchAddress("mcshwr_AncesotorTrkId", mcshwr_AncesotorTrkId, &b_mcshwr_AncesotorTrkId);
   fChain->SetBranchAddress("mcshwr_AncesotorProcess", &mcshwr_AncesotorProcess, &b_mcshwr_AncesotorProcess);
   fChain->SetBranchAddress("mcshwr_AncestorstartX", mcshwr_AncestorstartX, &b_mcshwr_AncestorstartX);
   fChain->SetBranchAddress("mcshwr_AncestorstartY", mcshwr_AncestorstartY, &b_mcshwr_AncestorstartY);
   fChain->SetBranchAddress("mcshwr_AncestorstartZ", mcshwr_AncestorstartZ, &b_mcshwr_AncestorstartZ);
   fChain->SetBranchAddress("mcshwr_AncestorendX", mcshwr_AncestorendX, &b_mcshwr_AncestorendX);
   fChain->SetBranchAddress("mcshwr_AncestorendY", mcshwr_AncestorendY, &b_mcshwr_AncestorendY);
   fChain->SetBranchAddress("mcshwr_AncestorendZ", mcshwr_AncestorendZ, &b_mcshwr_AncestorendZ);
   fChain->SetBranchAddress("no_mctracks", &no_mctracks, &b_no_mctracks);
   fChain->SetBranchAddress("mctrk_origin", mctrk_origin, &b_mctrk_origin);
   fChain->SetBranchAddress("mctrk_pdg", mctrk_pdg, &b_mctrk_pdg);
   fChain->SetBranchAddress("mctrk_TrackId", mctrk_TrackId, &b_mctrk_TrackId);
   fChain->SetBranchAddress("mctrk_Process", &mctrk_Process, &b_mctrk_Process);
   fChain->SetBranchAddress("mctrk_startX", mctrk_startX, &b_mctrk_startX);
   fChain->SetBranchAddress("mctrk_startY", mctrk_startY, &b_mctrk_startY);
   fChain->SetBranchAddress("mctrk_startZ", mctrk_startZ, &b_mctrk_startZ);
   fChain->SetBranchAddress("mctrk_endX", mctrk_endX, &b_mctrk_endX);
   fChain->SetBranchAddress("mctrk_endY", mctrk_endY, &b_mctrk_endY);
   fChain->SetBranchAddress("mctrk_endZ", mctrk_endZ, &b_mctrk_endZ);
   fChain->SetBranchAddress("mctrk_startX_drifted", mctrk_startX_drifted, &b_mctrk_startX_drifted);
   fChain->SetBranchAddress("mctrk_startY_drifted", mctrk_startY_drifted, &b_mctrk_startY_drifted);
   fChain->SetBranchAddress("mctrk_startZ_drifted", mctrk_startZ_drifted, &b_mctrk_startZ_drifted);
   fChain->SetBranchAddress("mctrk_endX_drifted", mctrk_endX_drifted, &b_mctrk_endX_drifted);
   fChain->SetBranchAddress("mctrk_endY_drifted", mctrk_endY_drifted, &b_mctrk_endY_drifted);
   fChain->SetBranchAddress("mctrk_endZ_drifted", mctrk_endZ_drifted, &b_mctrk_endZ_drifted);
   fChain->SetBranchAddress("mctrk_len_drifted", mctrk_len_drifted, &b_mctrk_len_drifted);
   fChain->SetBranchAddress("mctrk_p_drifted", mctrk_p_drifted, &b_mctrk_p_drifted);
   fChain->SetBranchAddress("mctrk_px_drifted", mctrk_px_drifted, &b_mctrk_px_drifted);
   fChain->SetBranchAddress("mctrk_py_drifted", mctrk_py_drifted, &b_mctrk_py_drifted);
   fChain->SetBranchAddress("mctrk_pz_drifted", mctrk_pz_drifted, &b_mctrk_pz_drifted);
   fChain->SetBranchAddress("mctrk_Motherpdg", mctrk_Motherpdg, &b_mctrk_Motherpdg);
   fChain->SetBranchAddress("mctrk_MotherTrkId", mctrk_MotherTrkId, &b_mctrk_MotherTrkId);
   fChain->SetBranchAddress("mctrk_MotherProcess", &mctrk_MotherProcess, &b_mctrk_MotherProcess);
   fChain->SetBranchAddress("mctrk_MotherstartX", mctrk_MotherstartX, &b_mctrk_MotherstartX);
   fChain->SetBranchAddress("mctrk_MotherstartY", mctrk_MotherstartY, &b_mctrk_MotherstartY);
   fChain->SetBranchAddress("mctrk_MotherstartZ", mctrk_MotherstartZ, &b_mctrk_MotherstartZ);
   fChain->SetBranchAddress("mctrk_MotherendX", mctrk_MotherendX, &b_mctrk_MotherendX);
   fChain->SetBranchAddress("mctrk_MotherendY", mctrk_MotherendY, &b_mctrk_MotherendY);
   fChain->SetBranchAddress("mctrk_MotherendZ", mctrk_MotherendZ, &b_mctrk_MotherendZ);
   fChain->SetBranchAddress("mctrk_Ancestorpdg", mctrk_Ancestorpdg, &b_mctrk_Ancestorpdg);
   fChain->SetBranchAddress("mctrk_AncesotorTrkId", mctrk_AncesotorTrkId, &b_mctrk_AncesotorTrkId);
   fChain->SetBranchAddress("mctrk_AncesotorProcess", &mctrk_AncesotorProcess, &b_mctrk_AncesotorProcess);
   fChain->SetBranchAddress("mctrk_AncestorstartX", mctrk_AncestorstartX, &b_mctrk_AncestorstartX);
   fChain->SetBranchAddress("mctrk_AncestorstartY", mctrk_AncestorstartY, &b_mctrk_AncestorstartY);
   fChain->SetBranchAddress("mctrk_AncestorstartZ", mctrk_AncestorstartZ, &b_mctrk_AncestorstartZ);
   fChain->SetBranchAddress("mctrk_AncestorendX", mctrk_AncestorendX, &b_mctrk_AncestorendX);
   fChain->SetBranchAddress("mctrk_AncestorendY", mctrk_AncestorendY, &b_mctrk_AncestorendY);
   fChain->SetBranchAddress("mctrk_AncestorendZ", mctrk_AncestorendZ, &b_mctrk_AncestorendZ);
   fChain->SetBranchAddress("nPFParticles", &nPFParticles, &b_nPFParticles);
   fChain->SetBranchAddress("pfp_selfID", pfp_selfID, &b_pfp_selfID);
   fChain->SetBranchAddress("pfp_isPrimary", pfp_isPrimary, &b_pfp_isPrimary);
   fChain->SetBranchAddress("pfp_numDaughters", pfp_numDaughters, &b_pfp_numDaughters);
   fChain->SetBranchAddress("pfp_daughterIDs", pfp_daughterIDs, &b_pfp_daughterIDs);
   fChain->SetBranchAddress("pfp_parentID", pfp_parentID, &b_pfp_parentID);
   fChain->SetBranchAddress("pfp_vertexID", pfp_vertexID, &b_pfp_vertexID);
   fChain->SetBranchAddress("pfp_isShower", pfp_isShower, &b_pfp_isShower);
   fChain->SetBranchAddress("pfp_isTrack", pfp_isTrack, &b_pfp_isTrack);
   fChain->SetBranchAddress("pfp_trackID", pfp_trackID, &b_pfp_trackID);
   fChain->SetBranchAddress("pfp_showerID", pfp_showerID, &b_pfp_showerID);
   fChain->SetBranchAddress("pfp_pdgCode", pfp_pdgCode, &b_pfp_pdgCode);
   fChain->SetBranchAddress("pfp_numClusters", pfp_numClusters, &b_pfp_numClusters);
   fChain->SetBranchAddress("pfp_clusterIDs", pfp_clusterIDs, &b_pfp_clusterIDs);
   fChain->SetBranchAddress("pfp_isNeutrino", pfp_isNeutrino, &b_pfp_isNeutrino);
   fChain->SetBranchAddress("pfp_numNeutrinos", &pfp_numNeutrinos, &b_pfp_numNeutrinos);
   fChain->SetBranchAddress("pfp_neutrinoIDs", pfp_neutrinoIDs, &b_pfp_neutrinoIDs);
   fChain->SetBranchAddress("nshowers_pandora", &nshowers_pandora, &b_nshowers_pandora);
   fChain->SetBranchAddress("showerID_pandora", showerID_pandora, &b_showerID_pandora);
   fChain->SetBranchAddress("shwr_bestplane_pandora", shwr_bestplane_pandora, &b_shwr_bestplane_pandora);
   fChain->SetBranchAddress("shwr_length_pandora", shwr_length_pandora, &b_shwr_length_pandora);
   fChain->SetBranchAddress("shwr_theta_pandora", shwr_theta_pandora, &b_shwr_theta_pandora);
   fChain->SetBranchAddress("shwr_thetaxz_pandora", shwr_thetaxz_pandora, &b_shwr_thetaxz_pandora);
   fChain->SetBranchAddress("shwr_thetayz_pandora", shwr_thetayz_pandora, &b_shwr_thetayz_pandora);
   fChain->SetBranchAddress("shwr_phi_pandora", shwr_phi_pandora, &b_shwr_phi_pandora);
   fChain->SetBranchAddress("shwr_startdcosx_pandora", shwr_startdcosx_pandora, &b_shwr_startdcosx_pandora);
   fChain->SetBranchAddress("shwr_startdcosy_pandora", shwr_startdcosy_pandora, &b_shwr_startdcosy_pandora);
   fChain->SetBranchAddress("shwr_startdcosz_pandora", shwr_startdcosz_pandora, &b_shwr_startdcosz_pandora);
   fChain->SetBranchAddress("shwr_startx_pandora", shwr_startx_pandora, &b_shwr_startx_pandora);
   fChain->SetBranchAddress("shwr_starty_pandora", shwr_starty_pandora, &b_shwr_starty_pandora);
   fChain->SetBranchAddress("shwr_startz_pandora", shwr_startz_pandora, &b_shwr_startz_pandora);
   fChain->SetBranchAddress("shwr_totEng_pandora", shwr_totEng_pandora, &b_shwr_totEng_pandora);
   fChain->SetBranchAddress("shwr_dedx_pandora", shwr_dedx_pandora, &b_shwr_dedx_pandora);
   fChain->SetBranchAddress("shwr_mipEng_pandora", shwr_mipEng_pandora, &b_shwr_mipEng_pandora);
   fChain->SetBranchAddress("shwr_hasPFParticle_pandora", shwr_hasPFParticle_pandora, &b_shwr_hasPFParticle_pandora);
   fChain->SetBranchAddress("shwr_PFParticleID_pandora", shwr_PFParticleID_pandora, &b_shwr_PFParticleID_pandora);
   fChain->SetBranchAddress("nshowers_trajcluster", &nshowers_trajcluster, &b_nshowers_trajcluster);
   fChain->SetBranchAddress("showerID_trajcluster", &showerID_trajcluster, &b_showerID_trajcluster);
   fChain->SetBranchAddress("shwr_bestplane_trajcluster", &shwr_bestplane_trajcluster, &b_shwr_bestplane_trajcluster);
   fChain->SetBranchAddress("shwr_length_trajcluster", &shwr_length_trajcluster, &b_shwr_length_trajcluster);
   fChain->SetBranchAddress("shwr_theta_trajcluster", &shwr_theta_trajcluster, &b_shwr_theta_trajcluster);
   fChain->SetBranchAddress("shwr_thetaxz_trajcluster", &shwr_thetaxz_trajcluster, &b_shwr_thetaxz_trajcluster);
   fChain->SetBranchAddress("shwr_thetayz_trajcluster", &shwr_thetayz_trajcluster, &b_shwr_thetayz_trajcluster);
   fChain->SetBranchAddress("shwr_phi_trajcluster", &shwr_phi_trajcluster, &b_shwr_phi_trajcluster);
   fChain->SetBranchAddress("shwr_startdcosx_trajcluster", &shwr_startdcosx_trajcluster, &b_shwr_startdcosx_trajcluster);
   fChain->SetBranchAddress("shwr_startdcosy_trajcluster", &shwr_startdcosy_trajcluster, &b_shwr_startdcosy_trajcluster);
   fChain->SetBranchAddress("shwr_startdcosz_trajcluster", &shwr_startdcosz_trajcluster, &b_shwr_startdcosz_trajcluster);
   fChain->SetBranchAddress("shwr_startx_trajcluster", &shwr_startx_trajcluster, &b_shwr_startx_trajcluster);
   fChain->SetBranchAddress("shwr_starty_trajcluster", &shwr_starty_trajcluster, &b_shwr_starty_trajcluster);
   fChain->SetBranchAddress("shwr_startz_trajcluster", &shwr_startz_trajcluster, &b_shwr_startz_trajcluster);
   fChain->SetBranchAddress("shwr_totEng_trajcluster", &shwr_totEng_trajcluster, &b_shwr_totEng_trajcluster);
   fChain->SetBranchAddress("shwr_dedx_trajcluster", &shwr_dedx_trajcluster, &b_shwr_dedx_trajcluster);
   fChain->SetBranchAddress("shwr_mipEng_trajcluster", &shwr_mipEng_trajcluster, &b_shwr_mipEng_trajcluster);
   fChain->SetBranchAddress("shwr_hasPFParticle_trajcluster", &shwr_hasPFParticle_trajcluster, &b_shwr_hasPFParticle_trajcluster);
   fChain->SetBranchAddress("shwr_PFParticleID_trajcluster", &shwr_PFParticleID_trajcluster, &b_shwr_PFParticleID_trajcluster);
   fChain->SetBranchAddress("ntracks_pandora", &ntracks_pandora, &b_ntracks_pandora);
   fChain->SetBranchAddress("trkId_pandora", trkId_pandora, &b_trkId_pandora);
   fChain->SetBranchAddress("trkncosmictags_tagger_pandora", trkncosmictags_tagger_pandora, &b_trkncosmictags_tagger_pandora);
   fChain->SetBranchAddress("trkcosmicscore_tagger_pandora", trkcosmicscore_tagger_pandora, &b_trkcosmicscore_tagger_pandora);
   fChain->SetBranchAddress("trkcosmictype_tagger_pandora", trkcosmictype_tagger_pandora, &b_trkcosmictype_tagger_pandora);
   fChain->SetBranchAddress("trkncosmictags_containmenttagger_pandora", trkncosmictags_containmenttagger_pandora, &b_trkncosmictags_containmenttagger_pandora);
   fChain->SetBranchAddress("trkcosmicscore_containmenttagger_pandora", trkcosmicscore_containmenttagger_pandora, &b_trkcosmicscore_containmenttagger_pandora);
   fChain->SetBranchAddress("trkcosmictype_containmenttagger_pandora", trkcosmictype_containmenttagger_pandora, &b_trkcosmictype_containmenttagger_pandora);
   fChain->SetBranchAddress("trkncosmictags_flashmatch_pandora", trkncosmictags_flashmatch_pandora, &b_trkncosmictags_flashmatch_pandora);
   fChain->SetBranchAddress("trkcosmicscore_flashmatch_pandora", trkcosmicscore_flashmatch_pandora, &b_trkcosmicscore_flashmatch_pandora);
   fChain->SetBranchAddress("trkcosmictype_flashmatch_pandora", trkcosmictype_flashmatch_pandora, &b_trkcosmictype_flashmatch_pandora);
   fChain->SetBranchAddress("trkke_pandora", trkke_pandora, &b_trkke_pandora);
   fChain->SetBranchAddress("trkrange_pandora", trkrange_pandora, &b_trkrange_pandora);
   fChain->SetBranchAddress("trkidtruth_pandora", trkidtruth_pandora, &b_trkidtruth_pandora);
   fChain->SetBranchAddress("trkorigin_pandora", trkorigin_pandora, &b_trkorigin_pandora);
   fChain->SetBranchAddress("trkpdgtruth_pandora", trkpdgtruth_pandora, &b_trkpdgtruth_pandora);
   fChain->SetBranchAddress("trkefftruth_pandora", trkefftruth_pandora, &b_trkefftruth_pandora);
   fChain->SetBranchAddress("trkpurtruth_pandora", trkpurtruth_pandora, &b_trkpurtruth_pandora);
   fChain->SetBranchAddress("trkpitchc_pandora", trkpitchc_pandora, &b_trkpitchc_pandora);
   fChain->SetBranchAddress("ntrkhits_pandora", ntrkhits_pandora, &b_ntrkhits_pandora);
   fChain->SetBranchAddress("trkdedx_pandora", trkdedx_pandora, &b_trkdedx_pandora);
   fChain->SetBranchAddress("trkdqdx_pandora", trkdqdx_pandora, &b_trkdqdx_pandora);
   fChain->SetBranchAddress("trkresrg_pandora", trkresrg_pandora, &b_trkresrg_pandora);
   fChain->SetBranchAddress("trkxyz_pandora", trkxyz_pandora, &b_trkxyz_pandora);
   fChain->SetBranchAddress("trkstartx_pandora", trkstartx_pandora, &b_trkstartx_pandora);
   fChain->SetBranchAddress("trkstarty_pandora", trkstarty_pandora, &b_trkstarty_pandora);
   fChain->SetBranchAddress("trkstartz_pandora", trkstartz_pandora, &b_trkstartz_pandora);
   fChain->SetBranchAddress("trkstartd_pandora", trkstartd_pandora, &b_trkstartd_pandora);
   fChain->SetBranchAddress("trkendx_pandora", trkendx_pandora, &b_trkendx_pandora);
   fChain->SetBranchAddress("trkendy_pandora", trkendy_pandora, &b_trkendy_pandora);
   fChain->SetBranchAddress("trkendz_pandora", trkendz_pandora, &b_trkendz_pandora);
   fChain->SetBranchAddress("trkendd_pandora", trkendd_pandora, &b_trkendd_pandora);
   fChain->SetBranchAddress("trkACpierceT0_pandora", trkACpierceT0_pandora, &b_trkACpierceT0_pandora);
   fChain->SetBranchAddress("trkflashT0_pandora", trkflashT0_pandora, &b_trkflashT0_pandora);
   fChain->SetBranchAddress("trktrueT0_pandora", trktrueT0_pandora, &b_trktrueT0_pandora);
   fChain->SetBranchAddress("trkg4id_pandora", trkg4id_pandora, &b_trkg4id_pandora);
   fChain->SetBranchAddress("trkorig_pandora", trkorig_pandora, &b_trkorig_pandora);
   fChain->SetBranchAddress("trkpurity_pandora", trkpurity_pandora, &b_trkpurity_pandora);
   fChain->SetBranchAddress("trkcompleteness_pandora", trkcompleteness_pandora, &b_trkcompleteness_pandora);
   fChain->SetBranchAddress("trktheta_pandora", trktheta_pandora, &b_trktheta_pandora);
   fChain->SetBranchAddress("trkphi_pandora", trkphi_pandora, &b_trkphi_pandora);
   fChain->SetBranchAddress("trkstartdcosx_pandora", trkstartdcosx_pandora, &b_trkstartdcosx_pandora);
   fChain->SetBranchAddress("trkstartdcosy_pandora", trkstartdcosy_pandora, &b_trkstartdcosy_pandora);
   fChain->SetBranchAddress("trkstartdcosz_pandora", trkstartdcosz_pandora, &b_trkstartdcosz_pandora);
   fChain->SetBranchAddress("trkenddcosx_pandora", trkenddcosx_pandora, &b_trkenddcosx_pandora);
   fChain->SetBranchAddress("trkenddcosy_pandora", trkenddcosy_pandora, &b_trkenddcosy_pandora);
   fChain->SetBranchAddress("trkenddcosz_pandora", trkenddcosz_pandora, &b_trkenddcosz_pandora);
   fChain->SetBranchAddress("trkthetaxz_pandora", trkthetaxz_pandora, &b_trkthetaxz_pandora);
   fChain->SetBranchAddress("trkthetayz_pandora", trkthetayz_pandora, &b_trkthetayz_pandora);
   fChain->SetBranchAddress("trkmom_pandora", trkmom_pandora, &b_trkmom_pandora);
   fChain->SetBranchAddress("trkmomrange_pandora", trkmomrange_pandora, &b_trkmomrange_pandora);
   fChain->SetBranchAddress("trkmommschi2_pandora", trkmommschi2_pandora, &b_trkmommschi2_pandora);
   fChain->SetBranchAddress("trkmommsllhd_pandora", trkmommsllhd_pandora, &b_trkmommsllhd_pandora);
   fChain->SetBranchAddress("trkmcsfwdmom_pandora", trkmcsfwdmom_pandora, &b_trkmcsfwdmom_pandora);
   fChain->SetBranchAddress("trkmcsfwdll_pandora", trkmcsfwdll_pandora, &b_trkmcsfwdll_pandora);
   fChain->SetBranchAddress("trkmcsfwderr_pandora", trkmcsfwderr_pandora, &b_trkmcsfwderr_pandora);
   fChain->SetBranchAddress("trkmcsbwdmom_pandora", trkmcsbwdmom_pandora, &b_trkmcsbwdmom_pandora);
   fChain->SetBranchAddress("trkmcsbwdll_pandora", trkmcsbwdll_pandora, &b_trkmcsbwdll_pandora);
   fChain->SetBranchAddress("trkmcsbwderr_pandora", trkmcsbwderr_pandora, &b_trkmcsbwderr_pandora);
   fChain->SetBranchAddress("trklen_pandora", trklen_pandora, &b_trklen_pandora);
   fChain->SetBranchAddress("trksvtxid_pandora", trksvtxid_pandora, &b_trksvtxid_pandora);
   fChain->SetBranchAddress("trkevtxid_pandora", trkevtxid_pandora, &b_trkevtxid_pandora);
   fChain->SetBranchAddress("trkntraj_pandora", trkntraj_pandora, &b_trkntraj_pandora);
   fChain->SetBranchAddress("trkpidpdg_pandora", trkpidpdg_pandora, &b_trkpidpdg_pandora);
   fChain->SetBranchAddress("trkpidchi_pandora", trkpidchi_pandora, &b_trkpidchi_pandora);
   fChain->SetBranchAddress("trkpidchipr_pandora", trkpidchipr_pandora, &b_trkpidchipr_pandora);
   fChain->SetBranchAddress("trkpidchika_pandora", trkpidchika_pandora, &b_trkpidchika_pandora);
   fChain->SetBranchAddress("trkpidchipi_pandora", trkpidchipi_pandora, &b_trkpidchipi_pandora);
   fChain->SetBranchAddress("trkpidchimu_pandora", trkpidchimu_pandora, &b_trkpidchimu_pandora);
   fChain->SetBranchAddress("trkpidpida_pandora", trkpidpida_pandora, &b_trkpidpida_pandora);
   fChain->SetBranchAddress("trkpidbestplane_pandora", trkpidbestplane_pandora, &b_trkpidbestplane_pandora);
   fChain->SetBranchAddress("trkhasPFParticle_pandora", trkhasPFParticle_pandora, &b_trkhasPFParticle_pandora);
   fChain->SetBranchAddress("trkPFParticleID_pandora", trkPFParticleID_pandora, &b_trkPFParticleID_pandora);
   fChain->SetBranchAddress("ntracks_pandoraKalmanTrack", &ntracks_pandoraKalmanTrack, &b_ntracks_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkId_pandoraKalmanTrack", trkId_pandoraKalmanTrack, &b_trkId_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkncosmictags_tagger_pandoraKalmanTrack", trkncosmictags_tagger_pandoraKalmanTrack, &b_trkncosmictags_tagger_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkcosmicscore_tagger_pandoraKalmanTrack", trkcosmicscore_tagger_pandoraKalmanTrack, &b_trkcosmicscore_tagger_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkcosmictype_tagger_pandoraKalmanTrack", trkcosmictype_tagger_pandoraKalmanTrack, &b_trkcosmictype_tagger_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkncosmictags_containmenttagger_pandoraKalmanTrack", trkncosmictags_containmenttagger_pandoraKalmanTrack, &b_trkncosmictags_containmenttagger_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkcosmicscore_containmenttagger_pandoraKalmanTrack", trkcosmicscore_containmenttagger_pandoraKalmanTrack, &b_trkcosmicscore_containmenttagger_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkcosmictype_containmenttagger_pandoraKalmanTrack", trkcosmictype_containmenttagger_pandoraKalmanTrack, &b_trkcosmictype_containmenttagger_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkncosmictags_flashmatch_pandoraKalmanTrack", trkncosmictags_flashmatch_pandoraKalmanTrack, &b_trkncosmictags_flashmatch_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkcosmicscore_flashmatch_pandoraKalmanTrack", trkcosmicscore_flashmatch_pandoraKalmanTrack, &b_trkcosmicscore_flashmatch_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkcosmictype_flashmatch_pandoraKalmanTrack", trkcosmictype_flashmatch_pandoraKalmanTrack, &b_trkcosmictype_flashmatch_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkke_pandoraKalmanTrack", trkke_pandoraKalmanTrack, &b_trkke_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkrange_pandoraKalmanTrack", trkrange_pandoraKalmanTrack, &b_trkrange_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkidtruth_pandoraKalmanTrack", trkidtruth_pandoraKalmanTrack, &b_trkidtruth_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkorigin_pandoraKalmanTrack", trkorigin_pandoraKalmanTrack, &b_trkorigin_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpdgtruth_pandoraKalmanTrack", trkpdgtruth_pandoraKalmanTrack, &b_trkpdgtruth_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkefftruth_pandoraKalmanTrack", trkefftruth_pandoraKalmanTrack, &b_trkefftruth_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpurtruth_pandoraKalmanTrack", trkpurtruth_pandoraKalmanTrack, &b_trkpurtruth_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpitchc_pandoraKalmanTrack", trkpitchc_pandoraKalmanTrack, &b_trkpitchc_pandoraKalmanTrack);
   fChain->SetBranchAddress("ntrkhits_pandoraKalmanTrack", ntrkhits_pandoraKalmanTrack, &b_ntrkhits_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkdedx_pandoraKalmanTrack", trkdedx_pandoraKalmanTrack, &b_trkdedx_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkdqdx_pandoraKalmanTrack", trkdqdx_pandoraKalmanTrack, &b_trkdqdx_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkresrg_pandoraKalmanTrack", trkresrg_pandoraKalmanTrack, &b_trkresrg_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkxyz_pandoraKalmanTrack", trkxyz_pandoraKalmanTrack, &b_trkxyz_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkstartx_pandoraKalmanTrack", trkstartx_pandoraKalmanTrack, &b_trkstartx_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkstarty_pandoraKalmanTrack", trkstarty_pandoraKalmanTrack, &b_trkstarty_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkstartz_pandoraKalmanTrack", trkstartz_pandoraKalmanTrack, &b_trkstartz_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkstartd_pandoraKalmanTrack", trkstartd_pandoraKalmanTrack, &b_trkstartd_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkendx_pandoraKalmanTrack", trkendx_pandoraKalmanTrack, &b_trkendx_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkendy_pandoraKalmanTrack", trkendy_pandoraKalmanTrack, &b_trkendy_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkendz_pandoraKalmanTrack", trkendz_pandoraKalmanTrack, &b_trkendz_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkendd_pandoraKalmanTrack", trkendd_pandoraKalmanTrack, &b_trkendd_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkACpierceT0_pandoraKalmanTrack", trkACpierceT0_pandoraKalmanTrack, &b_trkACpierceT0_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkflashT0_pandoraKalmanTrack", trkflashT0_pandoraKalmanTrack, &b_trkflashT0_pandoraKalmanTrack);
   fChain->SetBranchAddress("trktrueT0_pandoraKalmanTrack", trktrueT0_pandoraKalmanTrack, &b_trktrueT0_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkg4id_pandoraKalmanTrack", trkg4id_pandoraKalmanTrack, &b_trkg4id_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkorig_pandoraKalmanTrack", trkorig_pandoraKalmanTrack, &b_trkorig_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpurity_pandoraKalmanTrack", trkpurity_pandoraKalmanTrack, &b_trkpurity_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkcompleteness_pandoraKalmanTrack", trkcompleteness_pandoraKalmanTrack, &b_trkcompleteness_pandoraKalmanTrack);
   fChain->SetBranchAddress("trktheta_pandoraKalmanTrack", trktheta_pandoraKalmanTrack, &b_trktheta_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkphi_pandoraKalmanTrack", trkphi_pandoraKalmanTrack, &b_trkphi_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkstartdcosx_pandoraKalmanTrack", trkstartdcosx_pandoraKalmanTrack, &b_trkstartdcosx_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkstartdcosy_pandoraKalmanTrack", trkstartdcosy_pandoraKalmanTrack, &b_trkstartdcosy_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkstartdcosz_pandoraKalmanTrack", trkstartdcosz_pandoraKalmanTrack, &b_trkstartdcosz_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkenddcosx_pandoraKalmanTrack", trkenddcosx_pandoraKalmanTrack, &b_trkenddcosx_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkenddcosy_pandoraKalmanTrack", trkenddcosy_pandoraKalmanTrack, &b_trkenddcosy_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkenddcosz_pandoraKalmanTrack", trkenddcosz_pandoraKalmanTrack, &b_trkenddcosz_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkthetaxz_pandoraKalmanTrack", trkthetaxz_pandoraKalmanTrack, &b_trkthetaxz_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkthetayz_pandoraKalmanTrack", trkthetayz_pandoraKalmanTrack, &b_trkthetayz_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkmom_pandoraKalmanTrack", trkmom_pandoraKalmanTrack, &b_trkmom_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkmomrange_pandoraKalmanTrack", trkmomrange_pandoraKalmanTrack, &b_trkmomrange_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkmommschi2_pandoraKalmanTrack", trkmommschi2_pandoraKalmanTrack, &b_trkmommschi2_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkmommsllhd_pandoraKalmanTrack", trkmommsllhd_pandoraKalmanTrack, &b_trkmommsllhd_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkmcsfwdmom_pandoraKalmanTrack", trkmcsfwdmom_pandoraKalmanTrack, &b_trkmcsfwdmom_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkmcsfwdll_pandoraKalmanTrack", trkmcsfwdll_pandoraKalmanTrack, &b_trkmcsfwdll_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkmcsfwderr_pandoraKalmanTrack", trkmcsfwderr_pandoraKalmanTrack, &b_trkmcsfwderr_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkmcsbwdmom_pandoraKalmanTrack", trkmcsbwdmom_pandoraKalmanTrack, &b_trkmcsbwdmom_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkmcsbwdll_pandoraKalmanTrack", trkmcsbwdll_pandoraKalmanTrack, &b_trkmcsbwdll_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkmcsbwderr_pandoraKalmanTrack", trkmcsbwderr_pandoraKalmanTrack, &b_trkmcsbwderr_pandoraKalmanTrack);
   fChain->SetBranchAddress("trklen_pandoraKalmanTrack", trklen_pandoraKalmanTrack, &b_trklen_pandoraKalmanTrack);
   fChain->SetBranchAddress("trksvtxid_pandoraKalmanTrack", trksvtxid_pandoraKalmanTrack, &b_trksvtxid_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkevtxid_pandoraKalmanTrack", trkevtxid_pandoraKalmanTrack, &b_trkevtxid_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkntraj_pandoraKalmanTrack", trkntraj_pandoraKalmanTrack, &b_trkntraj_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpidpdg_pandoraKalmanTrack", trkpidpdg_pandoraKalmanTrack, &b_trkpidpdg_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpidchi_pandoraKalmanTrack", trkpidchi_pandoraKalmanTrack, &b_trkpidchi_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpidchipr_pandoraKalmanTrack", trkpidchipr_pandoraKalmanTrack, &b_trkpidchipr_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpidchika_pandoraKalmanTrack", trkpidchika_pandoraKalmanTrack, &b_trkpidchika_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpidchipi_pandoraKalmanTrack", trkpidchipi_pandoraKalmanTrack, &b_trkpidchipi_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpidchimu_pandoraKalmanTrack", trkpidchimu_pandoraKalmanTrack, &b_trkpidchimu_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpidpida_pandoraKalmanTrack", trkpidpida_pandoraKalmanTrack, &b_trkpidpida_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkpidbestplane_pandoraKalmanTrack", trkpidbestplane_pandoraKalmanTrack, &b_trkpidbestplane_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkhasPFParticle_pandoraKalmanTrack", trkhasPFParticle_pandoraKalmanTrack, &b_trkhasPFParticle_pandoraKalmanTrack);
   fChain->SetBranchAddress("trkPFParticleID_pandoraKalmanTrack", trkPFParticleID_pandoraKalmanTrack, &b_trkPFParticleID_pandoraKalmanTrack);
   fChain->SetBranchAddress("ntracks_pmtrack", &ntracks_pmtrack, &b_ntracks_pmtrack);
   fChain->SetBranchAddress("trkId_pmtrack", trkId_pmtrack, &b_trkId_pmtrack);
   fChain->SetBranchAddress("trkncosmictags_tagger_pmtrack", trkncosmictags_tagger_pmtrack, &b_trkncosmictags_tagger_pmtrack);
   fChain->SetBranchAddress("trkcosmicscore_tagger_pmtrack", trkcosmicscore_tagger_pmtrack, &b_trkcosmicscore_tagger_pmtrack);
   fChain->SetBranchAddress("trkcosmictype_tagger_pmtrack", trkcosmictype_tagger_pmtrack, &b_trkcosmictype_tagger_pmtrack);
   fChain->SetBranchAddress("trkncosmictags_containmenttagger_pmtrack", trkncosmictags_containmenttagger_pmtrack, &b_trkncosmictags_containmenttagger_pmtrack);
   fChain->SetBranchAddress("trkcosmicscore_containmenttagger_pmtrack", trkcosmicscore_containmenttagger_pmtrack, &b_trkcosmicscore_containmenttagger_pmtrack);
   fChain->SetBranchAddress("trkcosmictype_containmenttagger_pmtrack", trkcosmictype_containmenttagger_pmtrack, &b_trkcosmictype_containmenttagger_pmtrack);
   fChain->SetBranchAddress("trkncosmictags_flashmatch_pmtrack", trkncosmictags_flashmatch_pmtrack, &b_trkncosmictags_flashmatch_pmtrack);
   fChain->SetBranchAddress("trkcosmicscore_flashmatch_pmtrack", trkcosmicscore_flashmatch_pmtrack, &b_trkcosmicscore_flashmatch_pmtrack);
   fChain->SetBranchAddress("trkcosmictype_flashmatch_pmtrack", trkcosmictype_flashmatch_pmtrack, &b_trkcosmictype_flashmatch_pmtrack);
   fChain->SetBranchAddress("trkke_pmtrack", trkke_pmtrack, &b_trkke_pmtrack);
   fChain->SetBranchAddress("trkrange_pmtrack", trkrange_pmtrack, &b_trkrange_pmtrack);
   fChain->SetBranchAddress("trkidtruth_pmtrack", trkidtruth_pmtrack, &b_trkidtruth_pmtrack);
   fChain->SetBranchAddress("trkorigin_pmtrack", trkorigin_pmtrack, &b_trkorigin_pmtrack);
   fChain->SetBranchAddress("trkpdgtruth_pmtrack", trkpdgtruth_pmtrack, &b_trkpdgtruth_pmtrack);
   fChain->SetBranchAddress("trkefftruth_pmtrack", trkefftruth_pmtrack, &b_trkefftruth_pmtrack);
   fChain->SetBranchAddress("trkpurtruth_pmtrack", trkpurtruth_pmtrack, &b_trkpurtruth_pmtrack);
   fChain->SetBranchAddress("trkpitchc_pmtrack", trkpitchc_pmtrack, &b_trkpitchc_pmtrack);
   fChain->SetBranchAddress("ntrkhits_pmtrack", ntrkhits_pmtrack, &b_ntrkhits_pmtrack);
   fChain->SetBranchAddress("trkdedx_pmtrack", trkdedx_pmtrack, &b_trkdedx_pmtrack);
   fChain->SetBranchAddress("trkdqdx_pmtrack", trkdqdx_pmtrack, &b_trkdqdx_pmtrack);
   fChain->SetBranchAddress("trkresrg_pmtrack", trkresrg_pmtrack, &b_trkresrg_pmtrack);
   fChain->SetBranchAddress("trkxyz_pmtrack", trkxyz_pmtrack, &b_trkxyz_pmtrack);
   fChain->SetBranchAddress("trkstartx_pmtrack", trkstartx_pmtrack, &b_trkstartx_pmtrack);
   fChain->SetBranchAddress("trkstarty_pmtrack", trkstarty_pmtrack, &b_trkstarty_pmtrack);
   fChain->SetBranchAddress("trkstartz_pmtrack", trkstartz_pmtrack, &b_trkstartz_pmtrack);
   fChain->SetBranchAddress("trkstartd_pmtrack", trkstartd_pmtrack, &b_trkstartd_pmtrack);
   fChain->SetBranchAddress("trkendx_pmtrack", trkendx_pmtrack, &b_trkendx_pmtrack);
   fChain->SetBranchAddress("trkendy_pmtrack", trkendy_pmtrack, &b_trkendy_pmtrack);
   fChain->SetBranchAddress("trkendz_pmtrack", trkendz_pmtrack, &b_trkendz_pmtrack);
   fChain->SetBranchAddress("trkendd_pmtrack", trkendd_pmtrack, &b_trkendd_pmtrack);
   fChain->SetBranchAddress("trkACpierceT0_pmtrack", trkACpierceT0_pmtrack, &b_trkACpierceT0_pmtrack);
   fChain->SetBranchAddress("trkflashT0_pmtrack", trkflashT0_pmtrack, &b_trkflashT0_pmtrack);
   fChain->SetBranchAddress("trktrueT0_pmtrack", trktrueT0_pmtrack, &b_trktrueT0_pmtrack);
   fChain->SetBranchAddress("trkg4id_pmtrack", trkg4id_pmtrack, &b_trkg4id_pmtrack);
   fChain->SetBranchAddress("trkorig_pmtrack", trkorig_pmtrack, &b_trkorig_pmtrack);
   fChain->SetBranchAddress("trkpurity_pmtrack", trkpurity_pmtrack, &b_trkpurity_pmtrack);
   fChain->SetBranchAddress("trkcompleteness_pmtrack", trkcompleteness_pmtrack, &b_trkcompleteness_pmtrack);
   fChain->SetBranchAddress("trktheta_pmtrack", trktheta_pmtrack, &b_trktheta_pmtrack);
   fChain->SetBranchAddress("trkphi_pmtrack", trkphi_pmtrack, &b_trkphi_pmtrack);
   fChain->SetBranchAddress("trkstartdcosx_pmtrack", trkstartdcosx_pmtrack, &b_trkstartdcosx_pmtrack);
   fChain->SetBranchAddress("trkstartdcosy_pmtrack", trkstartdcosy_pmtrack, &b_trkstartdcosy_pmtrack);
   fChain->SetBranchAddress("trkstartdcosz_pmtrack", trkstartdcosz_pmtrack, &b_trkstartdcosz_pmtrack);
   fChain->SetBranchAddress("trkenddcosx_pmtrack", trkenddcosx_pmtrack, &b_trkenddcosx_pmtrack);
   fChain->SetBranchAddress("trkenddcosy_pmtrack", trkenddcosy_pmtrack, &b_trkenddcosy_pmtrack);
   fChain->SetBranchAddress("trkenddcosz_pmtrack", trkenddcosz_pmtrack, &b_trkenddcosz_pmtrack);
   fChain->SetBranchAddress("trkthetaxz_pmtrack", trkthetaxz_pmtrack, &b_trkthetaxz_pmtrack);
   fChain->SetBranchAddress("trkthetayz_pmtrack", trkthetayz_pmtrack, &b_trkthetayz_pmtrack);
   fChain->SetBranchAddress("trkmom_pmtrack", trkmom_pmtrack, &b_trkmom_pmtrack);
   fChain->SetBranchAddress("trkmomrange_pmtrack", trkmomrange_pmtrack, &b_trkmomrange_pmtrack);
   fChain->SetBranchAddress("trkmommschi2_pmtrack", trkmommschi2_pmtrack, &b_trkmommschi2_pmtrack);
   fChain->SetBranchAddress("trkmommsllhd_pmtrack", trkmommsllhd_pmtrack, &b_trkmommsllhd_pmtrack);
   fChain->SetBranchAddress("trkmcsfwdmom_pmtrack", trkmcsfwdmom_pmtrack, &b_trkmcsfwdmom_pmtrack);
   fChain->SetBranchAddress("trkmcsfwdll_pmtrack", trkmcsfwdll_pmtrack, &b_trkmcsfwdll_pmtrack);
   fChain->SetBranchAddress("trkmcsfwderr_pmtrack", trkmcsfwderr_pmtrack, &b_trkmcsfwderr_pmtrack);
   fChain->SetBranchAddress("trkmcsbwdmom_pmtrack", trkmcsbwdmom_pmtrack, &b_trkmcsbwdmom_pmtrack);
   fChain->SetBranchAddress("trkmcsbwdll_pmtrack", trkmcsbwdll_pmtrack, &b_trkmcsbwdll_pmtrack);
   fChain->SetBranchAddress("trkmcsbwderr_pmtrack", trkmcsbwderr_pmtrack, &b_trkmcsbwderr_pmtrack);
   fChain->SetBranchAddress("trklen_pmtrack", trklen_pmtrack, &b_trklen_pmtrack);
   fChain->SetBranchAddress("trksvtxid_pmtrack", trksvtxid_pmtrack, &b_trksvtxid_pmtrack);
   fChain->SetBranchAddress("trkevtxid_pmtrack", trkevtxid_pmtrack, &b_trkevtxid_pmtrack);
   fChain->SetBranchAddress("trkntraj_pmtrack", trkntraj_pmtrack, &b_trkntraj_pmtrack);
   fChain->SetBranchAddress("trkpidpdg_pmtrack", trkpidpdg_pmtrack, &b_trkpidpdg_pmtrack);
   fChain->SetBranchAddress("trkpidchi_pmtrack", trkpidchi_pmtrack, &b_trkpidchi_pmtrack);
   fChain->SetBranchAddress("trkpidchipr_pmtrack", trkpidchipr_pmtrack, &b_trkpidchipr_pmtrack);
   fChain->SetBranchAddress("trkpidchika_pmtrack", trkpidchika_pmtrack, &b_trkpidchika_pmtrack);
   fChain->SetBranchAddress("trkpidchipi_pmtrack", trkpidchipi_pmtrack, &b_trkpidchipi_pmtrack);
   fChain->SetBranchAddress("trkpidchimu_pmtrack", trkpidchimu_pmtrack, &b_trkpidchimu_pmtrack);
   fChain->SetBranchAddress("trkpidpida_pmtrack", trkpidpida_pmtrack, &b_trkpidpida_pmtrack);
   fChain->SetBranchAddress("trkpidbestplane_pmtrack", trkpidbestplane_pmtrack, &b_trkpidbestplane_pmtrack);
   fChain->SetBranchAddress("trkhasPFParticle_pmtrack", trkhasPFParticle_pmtrack, &b_trkhasPFParticle_pmtrack);
   fChain->SetBranchAddress("trkPFParticleID_pmtrack", trkPFParticleID_pmtrack, &b_trkPFParticleID_pmtrack);
   fChain->SetBranchAddress("ntracks_pandoraKalmanShower", &ntracks_pandoraKalmanShower, &b_ntracks_pandoraKalmanShower);
   fChain->SetBranchAddress("trkId_pandoraKalmanShower", trkId_pandoraKalmanShower, &b_trkId_pandoraKalmanShower);
   fChain->SetBranchAddress("trkncosmictags_tagger_pandoraKalmanShower", trkncosmictags_tagger_pandoraKalmanShower, &b_trkncosmictags_tagger_pandoraKalmanShower);
   fChain->SetBranchAddress("trkcosmicscore_tagger_pandoraKalmanShower", trkcosmicscore_tagger_pandoraKalmanShower, &b_trkcosmicscore_tagger_pandoraKalmanShower);
   fChain->SetBranchAddress("trkcosmictype_tagger_pandoraKalmanShower", trkcosmictype_tagger_pandoraKalmanShower, &b_trkcosmictype_tagger_pandoraKalmanShower);
   fChain->SetBranchAddress("trkncosmictags_containmenttagger_pandoraKalmanShower", trkncosmictags_containmenttagger_pandoraKalmanShower, &b_trkncosmictags_containmenttagger_pandoraKalmanShower);
   fChain->SetBranchAddress("trkcosmicscore_containmenttagger_pandoraKalmanShower", trkcosmicscore_containmenttagger_pandoraKalmanShower, &b_trkcosmicscore_containmenttagger_pandoraKalmanShower);
   fChain->SetBranchAddress("trkcosmictype_containmenttagger_pandoraKalmanShower", trkcosmictype_containmenttagger_pandoraKalmanShower, &b_trkcosmictype_containmenttagger_pandoraKalmanShower);
   fChain->SetBranchAddress("trkncosmictags_flashmatch_pandoraKalmanShower", trkncosmictags_flashmatch_pandoraKalmanShower, &b_trkncosmictags_flashmatch_pandoraKalmanShower);
   fChain->SetBranchAddress("trkcosmicscore_flashmatch_pandoraKalmanShower", trkcosmicscore_flashmatch_pandoraKalmanShower, &b_trkcosmicscore_flashmatch_pandoraKalmanShower);
   fChain->SetBranchAddress("trkcosmictype_flashmatch_pandoraKalmanShower", trkcosmictype_flashmatch_pandoraKalmanShower, &b_trkcosmictype_flashmatch_pandoraKalmanShower);
   fChain->SetBranchAddress("trkke_pandoraKalmanShower", trkke_pandoraKalmanShower, &b_trkke_pandoraKalmanShower);
   fChain->SetBranchAddress("trkrange_pandoraKalmanShower", trkrange_pandoraKalmanShower, &b_trkrange_pandoraKalmanShower);
   fChain->SetBranchAddress("trkidtruth_pandoraKalmanShower", trkidtruth_pandoraKalmanShower, &b_trkidtruth_pandoraKalmanShower);
   fChain->SetBranchAddress("trkorigin_pandoraKalmanShower", trkorigin_pandoraKalmanShower, &b_trkorigin_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpdgtruth_pandoraKalmanShower", trkpdgtruth_pandoraKalmanShower, &b_trkpdgtruth_pandoraKalmanShower);
   fChain->SetBranchAddress("trkefftruth_pandoraKalmanShower", trkefftruth_pandoraKalmanShower, &b_trkefftruth_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpurtruth_pandoraKalmanShower", trkpurtruth_pandoraKalmanShower, &b_trkpurtruth_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpitchc_pandoraKalmanShower", trkpitchc_pandoraKalmanShower, &b_trkpitchc_pandoraKalmanShower);
   fChain->SetBranchAddress("ntrkhits_pandoraKalmanShower", ntrkhits_pandoraKalmanShower, &b_ntrkhits_pandoraKalmanShower);
   fChain->SetBranchAddress("trkdedx_pandoraKalmanShower", trkdedx_pandoraKalmanShower, &b_trkdedx_pandoraKalmanShower);
   fChain->SetBranchAddress("trkdqdx_pandoraKalmanShower", trkdqdx_pandoraKalmanShower, &b_trkdqdx_pandoraKalmanShower);
   fChain->SetBranchAddress("trkresrg_pandoraKalmanShower", trkresrg_pandoraKalmanShower, &b_trkresrg_pandoraKalmanShower);
   fChain->SetBranchAddress("trkxyz_pandoraKalmanShower", trkxyz_pandoraKalmanShower, &b_trkxyz_pandoraKalmanShower);
   fChain->SetBranchAddress("trkstartx_pandoraKalmanShower", trkstartx_pandoraKalmanShower, &b_trkstartx_pandoraKalmanShower);
   fChain->SetBranchAddress("trkstarty_pandoraKalmanShower", trkstarty_pandoraKalmanShower, &b_trkstarty_pandoraKalmanShower);
   fChain->SetBranchAddress("trkstartz_pandoraKalmanShower", trkstartz_pandoraKalmanShower, &b_trkstartz_pandoraKalmanShower);
   fChain->SetBranchAddress("trkstartd_pandoraKalmanShower", trkstartd_pandoraKalmanShower, &b_trkstartd_pandoraKalmanShower);
   fChain->SetBranchAddress("trkendx_pandoraKalmanShower", trkendx_pandoraKalmanShower, &b_trkendx_pandoraKalmanShower);
   fChain->SetBranchAddress("trkendy_pandoraKalmanShower", trkendy_pandoraKalmanShower, &b_trkendy_pandoraKalmanShower);
   fChain->SetBranchAddress("trkendz_pandoraKalmanShower", trkendz_pandoraKalmanShower, &b_trkendz_pandoraKalmanShower);
   fChain->SetBranchAddress("trkendd_pandoraKalmanShower", trkendd_pandoraKalmanShower, &b_trkendd_pandoraKalmanShower);
   fChain->SetBranchAddress("trkACpierceT0_pandoraKalmanShower", trkACpierceT0_pandoraKalmanShower, &b_trkACpierceT0_pandoraKalmanShower);
   fChain->SetBranchAddress("trkflashT0_pandoraKalmanShower", trkflashT0_pandoraKalmanShower, &b_trkflashT0_pandoraKalmanShower);
   fChain->SetBranchAddress("trktrueT0_pandoraKalmanShower", trktrueT0_pandoraKalmanShower, &b_trktrueT0_pandoraKalmanShower);
   fChain->SetBranchAddress("trkg4id_pandoraKalmanShower", trkg4id_pandoraKalmanShower, &b_trkg4id_pandoraKalmanShower);
   fChain->SetBranchAddress("trkorig_pandoraKalmanShower", trkorig_pandoraKalmanShower, &b_trkorig_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpurity_pandoraKalmanShower", trkpurity_pandoraKalmanShower, &b_trkpurity_pandoraKalmanShower);
   fChain->SetBranchAddress("trkcompleteness_pandoraKalmanShower", trkcompleteness_pandoraKalmanShower, &b_trkcompleteness_pandoraKalmanShower);
   fChain->SetBranchAddress("trktheta_pandoraKalmanShower", trktheta_pandoraKalmanShower, &b_trktheta_pandoraKalmanShower);
   fChain->SetBranchAddress("trkphi_pandoraKalmanShower", trkphi_pandoraKalmanShower, &b_trkphi_pandoraKalmanShower);
   fChain->SetBranchAddress("trkstartdcosx_pandoraKalmanShower", trkstartdcosx_pandoraKalmanShower, &b_trkstartdcosx_pandoraKalmanShower);
   fChain->SetBranchAddress("trkstartdcosy_pandoraKalmanShower", trkstartdcosy_pandoraKalmanShower, &b_trkstartdcosy_pandoraKalmanShower);
   fChain->SetBranchAddress("trkstartdcosz_pandoraKalmanShower", trkstartdcosz_pandoraKalmanShower, &b_trkstartdcosz_pandoraKalmanShower);
   fChain->SetBranchAddress("trkenddcosx_pandoraKalmanShower", trkenddcosx_pandoraKalmanShower, &b_trkenddcosx_pandoraKalmanShower);
   fChain->SetBranchAddress("trkenddcosy_pandoraKalmanShower", trkenddcosy_pandoraKalmanShower, &b_trkenddcosy_pandoraKalmanShower);
   fChain->SetBranchAddress("trkenddcosz_pandoraKalmanShower", trkenddcosz_pandoraKalmanShower, &b_trkenddcosz_pandoraKalmanShower);
   fChain->SetBranchAddress("trkthetaxz_pandoraKalmanShower", trkthetaxz_pandoraKalmanShower, &b_trkthetaxz_pandoraKalmanShower);
   fChain->SetBranchAddress("trkthetayz_pandoraKalmanShower", trkthetayz_pandoraKalmanShower, &b_trkthetayz_pandoraKalmanShower);
   fChain->SetBranchAddress("trkmom_pandoraKalmanShower", trkmom_pandoraKalmanShower, &b_trkmom_pandoraKalmanShower);
   fChain->SetBranchAddress("trkmomrange_pandoraKalmanShower", trkmomrange_pandoraKalmanShower, &b_trkmomrange_pandoraKalmanShower);
   fChain->SetBranchAddress("trkmommschi2_pandoraKalmanShower", trkmommschi2_pandoraKalmanShower, &b_trkmommschi2_pandoraKalmanShower);
   fChain->SetBranchAddress("trkmommsllhd_pandoraKalmanShower", trkmommsllhd_pandoraKalmanShower, &b_trkmommsllhd_pandoraKalmanShower);
   fChain->SetBranchAddress("trkmcsfwdmom_pandoraKalmanShower", trkmcsfwdmom_pandoraKalmanShower, &b_trkmcsfwdmom_pandoraKalmanShower);
   fChain->SetBranchAddress("trkmcsfwdll_pandoraKalmanShower", trkmcsfwdll_pandoraKalmanShower, &b_trkmcsfwdll_pandoraKalmanShower);
   fChain->SetBranchAddress("trkmcsfwderr_pandoraKalmanShower", trkmcsfwderr_pandoraKalmanShower, &b_trkmcsfwderr_pandoraKalmanShower);
   fChain->SetBranchAddress("trkmcsbwdmom_pandoraKalmanShower", trkmcsbwdmom_pandoraKalmanShower, &b_trkmcsbwdmom_pandoraKalmanShower);
   fChain->SetBranchAddress("trkmcsbwdll_pandoraKalmanShower", trkmcsbwdll_pandoraKalmanShower, &b_trkmcsbwdll_pandoraKalmanShower);
   fChain->SetBranchAddress("trkmcsbwderr_pandoraKalmanShower", trkmcsbwderr_pandoraKalmanShower, &b_trkmcsbwderr_pandoraKalmanShower);
   fChain->SetBranchAddress("trklen_pandoraKalmanShower", trklen_pandoraKalmanShower, &b_trklen_pandoraKalmanShower);
   fChain->SetBranchAddress("trksvtxid_pandoraKalmanShower", trksvtxid_pandoraKalmanShower, &b_trksvtxid_pandoraKalmanShower);
   fChain->SetBranchAddress("trkevtxid_pandoraKalmanShower", trkevtxid_pandoraKalmanShower, &b_trkevtxid_pandoraKalmanShower);
   fChain->SetBranchAddress("trkntraj_pandoraKalmanShower", trkntraj_pandoraKalmanShower, &b_trkntraj_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpidpdg_pandoraKalmanShower", trkpidpdg_pandoraKalmanShower, &b_trkpidpdg_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpidchi_pandoraKalmanShower", trkpidchi_pandoraKalmanShower, &b_trkpidchi_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpidchipr_pandoraKalmanShower", trkpidchipr_pandoraKalmanShower, &b_trkpidchipr_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpidchika_pandoraKalmanShower", trkpidchika_pandoraKalmanShower, &b_trkpidchika_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpidchipi_pandoraKalmanShower", trkpidchipi_pandoraKalmanShower, &b_trkpidchipi_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpidchimu_pandoraKalmanShower", trkpidchimu_pandoraKalmanShower, &b_trkpidchimu_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpidpida_pandoraKalmanShower", trkpidpida_pandoraKalmanShower, &b_trkpidpida_pandoraKalmanShower);
   fChain->SetBranchAddress("trkpidbestplane_pandoraKalmanShower", trkpidbestplane_pandoraKalmanShower, &b_trkpidbestplane_pandoraKalmanShower);
   fChain->SetBranchAddress("trkhasPFParticle_pandoraKalmanShower", trkhasPFParticle_pandoraKalmanShower, &b_trkhasPFParticle_pandoraKalmanShower);
   fChain->SetBranchAddress("trkPFParticleID_pandoraKalmanShower", trkPFParticleID_pandoraKalmanShower, &b_trkPFParticleID_pandoraKalmanShower);
   fChain->SetBranchAddress("nvtx_pandora", &nvtx_pandora, &b_nvtx_pandora);
   fChain->SetBranchAddress("vtxId_pandora", vtxId_pandora, &b_vtxId_pandora);
   fChain->SetBranchAddress("vtxx_pandora", vtxx_pandora, &b_vtxx_pandora);
   fChain->SetBranchAddress("vtxy_pandora", vtxy_pandora, &b_vtxy_pandora);
   fChain->SetBranchAddress("vtxz_pandora", vtxz_pandora, &b_vtxz_pandora);
   fChain->SetBranchAddress("vtxhasPFParticle_pandora", vtxhasPFParticle_pandora, &b_vtxhasPFParticle_pandora);
   fChain->SetBranchAddress("vtxPFParticleID_pandora", vtxPFParticleID_pandora, &b_vtxPFParticleID_pandora);
   fChain->SetBranchAddress("nvtx_pmtrack", &nvtx_pmtrack, &b_nvtx_pmtrack);
   fChain->SetBranchAddress("vtxId_pmtrack", vtxId_pmtrack, &b_vtxId_pmtrack);
   fChain->SetBranchAddress("vtxx_pmtrack", vtxx_pmtrack, &b_vtxx_pmtrack);
   fChain->SetBranchAddress("vtxy_pmtrack", vtxy_pmtrack, &b_vtxy_pmtrack);
   fChain->SetBranchAddress("vtxz_pmtrack", vtxz_pmtrack, &b_vtxz_pmtrack);
   fChain->SetBranchAddress("vtxhasPFParticle_pmtrack", vtxhasPFParticle_pmtrack, &b_vtxhasPFParticle_pmtrack);
   fChain->SetBranchAddress("vtxPFParticleID_pmtrack", vtxPFParticleID_pmtrack, &b_vtxPFParticleID_pmtrack);
   fChain->SetBranchAddress("nvtx_trajcluster", &nvtx_trajcluster, &b_nvtx_trajcluster);
   fChain->SetBranchAddress("vtxId_trajcluster", vtxId_trajcluster, &b_vtxId_trajcluster);
   fChain->SetBranchAddress("vtxx_trajcluster", vtxx_trajcluster, &b_vtxx_trajcluster);
   fChain->SetBranchAddress("vtxy_trajcluster", vtxy_trajcluster, &b_vtxy_trajcluster);
   fChain->SetBranchAddress("vtxz_trajcluster", vtxz_trajcluster, &b_vtxz_trajcluster);
   fChain->SetBranchAddress("vtxhasPFParticle_trajcluster", vtxhasPFParticle_trajcluster, &b_vtxhasPFParticle_trajcluster);
   fChain->SetBranchAddress("vtxPFParticleID_trajcluster", vtxPFParticleID_trajcluster, &b_vtxPFParticleID_trajcluster);
   fChain->SetBranchAddress("nnuvtx_pandora", &nnuvtx_pandora, &b_nnuvtx_pandora);
   fChain->SetBranchAddress("nuvtxId_pandora", nuvtxId_pandora, &b_nuvtxId_pandora);
   fChain->SetBranchAddress("nuvtxx_pandora", nuvtxx_pandora, &b_nuvtxx_pandora);
   fChain->SetBranchAddress("nuvtxy_pandora", nuvtxy_pandora, &b_nuvtxy_pandora);
   fChain->SetBranchAddress("nuvtxz_pandora", nuvtxz_pandora, &b_nuvtxz_pandora);
   fChain->SetBranchAddress("nuvtxpdg_pandora", nuvtxpdg_pandora, &b_nuvtxpdg_pandora);
   fChain->SetBranchAddress("nuvtxhasPFParticle_pandora", nuvtxhasPFParticle_pandora, &b_nuvtxhasPFParticle_pandora);
   fChain->SetBranchAddress("nuvtxPFParticleID_pandora", nuvtxPFParticleID_pandora, &b_nuvtxPFParticleID_pandora);
   fChain->SetBranchAddress("nfls_simpleFlashBeam", &nfls_simpleFlashBeam, &b_nfls_simpleFlashBeam);
   fChain->SetBranchAddress("flsTime_simpleFlashBeam", flsTime_simpleFlashBeam, &b_flsTime_simpleFlashBeam);
   fChain->SetBranchAddress("flsPe_simpleFlashBeam", flsPe_simpleFlashBeam, &b_flsPe_simpleFlashBeam);
   fChain->SetBranchAddress("flsPePerOpDet_simpleFlashBeam", flsPePerOpDet_simpleFlashBeam, &b_flsPePerOpDet_simpleFlashBeam);
   fChain->SetBranchAddress("flsXcenter_simpleFlashBeam", flsXcenter_simpleFlashBeam, &b_flsXcenter_simpleFlashBeam);
   fChain->SetBranchAddress("flsYcenter_simpleFlashBeam", flsYcenter_simpleFlashBeam, &b_flsYcenter_simpleFlashBeam);
   fChain->SetBranchAddress("flsZcenter_simpleFlashBeam", flsZcenter_simpleFlashBeam, &b_flsZcenter_simpleFlashBeam);
   fChain->SetBranchAddress("flsYwidth_simpleFlashBeam", flsYwidth_simpleFlashBeam, &b_flsYwidth_simpleFlashBeam);
   fChain->SetBranchAddress("flsZwidth_simpleFlashBeam", flsZwidth_simpleFlashBeam, &b_flsZwidth_simpleFlashBeam);
   fChain->SetBranchAddress("flsTwidth_simpleFlashBeam", flsTwidth_simpleFlashBeam, &b_flsTwidth_simpleFlashBeam);
   fChain->SetBranchAddress("nfls_simpleFlashCosmic", &nfls_simpleFlashCosmic, &b_nfls_simpleFlashCosmic);
   fChain->SetBranchAddress("flsTime_simpleFlashCosmic", flsTime_simpleFlashCosmic, &b_flsTime_simpleFlashCosmic);
   fChain->SetBranchAddress("flsPe_simpleFlashCosmic", flsPe_simpleFlashCosmic, &b_flsPe_simpleFlashCosmic);
   fChain->SetBranchAddress("flsPePerOpDet_simpleFlashCosmic", flsPePerOpDet_simpleFlashCosmic, &b_flsPePerOpDet_simpleFlashCosmic);
   fChain->SetBranchAddress("flsXcenter_simpleFlashCosmic", flsXcenter_simpleFlashCosmic, &b_flsXcenter_simpleFlashCosmic);
   fChain->SetBranchAddress("flsYcenter_simpleFlashCosmic", flsYcenter_simpleFlashCosmic, &b_flsYcenter_simpleFlashCosmic);
   fChain->SetBranchAddress("flsZcenter_simpleFlashCosmic", flsZcenter_simpleFlashCosmic, &b_flsZcenter_simpleFlashCosmic);
   fChain->SetBranchAddress("flsYwidth_simpleFlashCosmic", flsYwidth_simpleFlashCosmic, &b_flsYwidth_simpleFlashCosmic);
   fChain->SetBranchAddress("flsZwidth_simpleFlashCosmic", flsZwidth_simpleFlashCosmic, &b_flsZwidth_simpleFlashCosmic);
   fChain->SetBranchAddress("flsTwidth_simpleFlashCosmic", flsTwidth_simpleFlashCosmic, &b_flsTwidth_simpleFlashCosmic);
   fChain->SetBranchAddress("nfls_simpleFlashBeamLowPE", &nfls_simpleFlashBeamLowPE, &b_nfls_simpleFlashBeamLowPE);
   fChain->SetBranchAddress("flsTime_simpleFlashBeamLowPE", flsTime_simpleFlashBeamLowPE, &b_flsTime_simpleFlashBeamLowPE);
   fChain->SetBranchAddress("flsPe_simpleFlashBeamLowPE", flsPe_simpleFlashBeamLowPE, &b_flsPe_simpleFlashBeamLowPE);
   fChain->SetBranchAddress("flsPePerOpDet_simpleFlashBeamLowPE", flsPePerOpDet_simpleFlashBeamLowPE, &b_flsPePerOpDet_simpleFlashBeamLowPE);
   fChain->SetBranchAddress("flsXcenter_simpleFlashBeamLowPE", flsXcenter_simpleFlashBeamLowPE, &b_flsXcenter_simpleFlashBeamLowPE);
   fChain->SetBranchAddress("flsYcenter_simpleFlashBeamLowPE", flsYcenter_simpleFlashBeamLowPE, &b_flsYcenter_simpleFlashBeamLowPE);
   fChain->SetBranchAddress("flsZcenter_simpleFlashBeamLowPE", flsZcenter_simpleFlashBeamLowPE, &b_flsZcenter_simpleFlashBeamLowPE);
   fChain->SetBranchAddress("flsYwidth_simpleFlashBeamLowPE", flsYwidth_simpleFlashBeamLowPE, &b_flsYwidth_simpleFlashBeamLowPE);
   fChain->SetBranchAddress("flsZwidth_simpleFlashBeamLowPE", flsZwidth_simpleFlashBeamLowPE, &b_flsZwidth_simpleFlashBeamLowPE);
   fChain->SetBranchAddress("flsTwidth_simpleFlashBeamLowPE", flsTwidth_simpleFlashBeamLowPE, &b_flsTwidth_simpleFlashBeamLowPE);
   Notify();
}

Bool_t NewAnalysis::Notify()
{
   // The Notify() function is called when a new file is opened. This
   // can be either for a new TTree in a TChain or when when a new TTree
   // is started when using PROOF. It is normally not necessary to make changes
   // to the generated code, but the routine can be extended by the
   // user if needed. The return value is currently not used.

   return kTRUE;
}

void NewAnalysis::Show(Long64_t entry)
{
// Print contents of entry.
// If entry is not specified, print current entry
   if (!fChain) return;
   fChain->Show(entry);
}
Int_t NewAnalysis::Cut(Long64_t entry)
{
// This function may be called from Loop.
// returns  1 if entry is accepted.
// returns -1 otherwise.
   return 1;
}
#endif // #ifdef NewAnalysis_cxx
